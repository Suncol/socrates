To simplify the preprocessing method given by Stacy Walters:

- commonsrc/chemdr.F is wrong for the cray version since it calls 
  IMP_SLV with tstep and sub_tstep in both cases while vector/imp_slv.F
  does not have these 2 dummy args. Correct vector/imp_slv.F to have the same
  nb of dummy args than cache/imp_slv.F. Check delt vs dti. Keep chemdr.F common
  It seems that RXTCNT was not translated to 192 in the cray version of 
  IMP_SLV in bkend/src/vector/imp_slv.F . Replace RXTCNT by RXNCNT. Plus,
  The cray version uses PROD_LOSS, while the "DEC" version uses IMP_PROD_LOSS.
  Only IMP_PROD_LOSS is output by the preprocessor. Make the cray version use
  IMP_PROD_LOSS by comparing PROD_LOSS (from v4s032) and IMP_PROD_LOSS .
  
  -> FIXED by Stacy

- Cray version of LINMAT (generated by preproc/lin_code.f) has the closing
  parenthesis missing in the first line

- Most differences when changing the chemistry are due to the dimension 
  "nb of species" which is hard-coded by the preprocessor (53 in II51 and v4s)
  But this is also set to the parameter nbcon in module SPECIES_DIMS .
  So the best is to preprocess only the modules in 
  new /home/simonc/socrates/in_preproc/modules/chem.mod

      module SPECIES_DIMS

      integer, parameter :: nbcon = PCNST  ! (= 53) to use in lots of places
      integer, parameter :: nfs = NFS      ! number of "fixed" species for USRRXT

      end module SPECIES_DIMS

      module CHEM_MODS

      integer, parameter :: hetcnt = HETCNT,   ! nb of het proc for CHEMDR
     $                      phtcnt = PHTCNT,   ! nb of photo proc
     $                      rxncnt = RXNCNT,   ! nb of total reactions for USRRXT
     $                      nextcnt = EXTCNT

 .. so that we can avoid having to preprocess chemdr.f

- The following routines MUST be preprocessed, since their code really changes 
  when the chemistry is changed (some of them are also machine-dependent) :

      subroutine IMP_SLV        from bkend/src/(vector OR cache)/imp_slv.F
      subroutine IMP_PROD_LOSS  written by preproc/pl_code.f
      subroutine INDPRD         written by preproc/ipd_code.f
      subroutine LINMAT         written by preproc/lin_code.f
      subroutine NLNMAT         written by preproc/nln_code.f
      subroutine LU_FAC         written by preproc/make_lu_fac.f
      subroutine LU_SLV         written by preproc/make_lu_slv.f
      subroutine SETRXT         written by preproc/rate_code.f  or rate_tab.f ??
      subroutine ADJRXT         written by preproc/radj_code.f
      subroutine PHTADJ         written by preproc/padj_code.f  is EMPTY ??

- The following routines MUST be preprocessed, even though they are 
  chemistry-independent, because they are machine-dependent :
  
      subroutine ACC_LOSS       from bkend/src/(vector OR cache)/acc_loss.F
      real functions SW_SECOND and TIME_DIFF   from /bkend/src/sw_second.F

- soc.inti.x.F will still be preprocessed since it reads soc.dat which is 
  important data file generated by the preprocessor.
