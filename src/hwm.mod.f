! subversion Id for THIS file : $Id: hwm.mod.f 8506 2016-01-28 10:09:58Z simonc $
! $URL: http://svn-ae/ae/COMMON/stand-alone/atmos_models/socrates/tags/07.18.01/src/hwm.mod.f $
!-----------------------------------------------------------------------
!-----------------------------------------------------------------------
!    This module file contains a fortran90 version of the 
!    semi-empirical model of the horizontal winds HWM93 created by 
!    A.E. Hedin. The newest bibliographical reference is:
!      A.E. Hedin et al, Empirical wind model for the upper, middle 
!      and lower atmosphere,
!      J. Atm. Terr. Phys., vol.58 no 13, p.1421, 1996
!
!    The original source code is available at 
!    ftp://nssdc.gsfc.nasa.gov/pub/models/atmospheric/hwm93/
!
!      Immediately below this header is a bunch of data modules, all for use
!      by the module subprogram HWM_CODE. All of the names of these modules
!      begin with "HWM_" .
!      The callable NWGWS5_F90 routine (and its description/use guide) is
!      below, in the module subprogram HWM_CODE. 
!
!   To use this fortran90 version of HWM in a program, take the following steps:
!           - Add at the beginning of your fortran90 program:
!             use HWM_CODE
!           - The execution part of your program can now call NWGWS5_F90
!           - compile hwm.mod.f (e.g. "f90 -c hwm.mod.f")
!           - compile your program file and link it to the compiled 
!             module (e.g. "f90 -p hwm.mod.o yourprogram.f" on lots of 
!             Un*x systems)
!
! Simon Chabrillat - Belgium Institute for Space Aeronomy
! e-mail : simonc@oma.be   
!-----------------------------------------------------------------------


      module HWM_PARMW5        
!-----------------------------------------------------------------------
!        from the common PARMW5 set in BLOCK DATA GWSBK5 of HWM93, 28-JAN-93
!-----------------------------------------------------------------------
      implicit none
      
      real, dimension(50) :: PBA1  =  (/
     *  0.00000E+00,-1.31640E+01,-1.52352E+01, 1.00718E+02, 3.94962E+00,
     *  2.19452E-01, 8.03296E+01,-1.02032E+00,-2.02149E-01, 5.67263E+01,
     *  0.00000E+00,-6.05459E+00, 6.68106E+00,-8.49486E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 8.39399E+01, 0.00000E+00, 9.96285E-02,
     *  0.00000E+00,-2.66243E-02, 0.00000E+00,-1.32373E+00, 1.39396E-02,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 3.36523E+01,-7.42795E-01,-3.89352E+00,-7.81354E-01,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 3.76631E+00,-1.22024E+00,
     * -5.47580E-01, 1.09146E+00, 9.06245E-01, 2.21119E-02, 0.00000E+00,
     * 7.73919E-02, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00/)
      real, dimension(50) :: PBA2  =  (/
     * -3.82415E-01, 0.00000E+00, 1.76202E-01, 0.00000E+00,-6.77651E-01,
     *  1.10357E+00, 2.25732E+00, 0.00000E+00, 1.54237E+04, 0.00000E+00,
     *  1.27411E-01,-2.84314E-03, 4.62562E-01,-5.34596E+01,-7.23808E+00,
     *  0.00000E+00, 0.00000E+00, 4.52770E-01,-8.50922E+00,-2.85389E-01,
     *  2.12000E+01, 6.80171E+02, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * -2.72552E+04, 0.00000E+00, 0.00000E+00, 0.00000E+00, 2.64109E+03,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00,-1.47320E+00,-2.98179E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 1.05412E-02,
     *  4.93452E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 7.98332E-02,-5.30954E+01, 2.10211E-02, 3.00000E+00/)
      real, dimension(50) :: PBA3  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,-2.79843E-01,
     *  1.81152E-01, 0.00000E+00, 0.00000E+00,-6.24673E-02,-5.37589E-02,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00,-8.94418E-02, 3.70413E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,-4.84645E+00,
     * 4.24178E-01, 0.00000E+00, 0.00000E+00, 1.86494E-01,-9.56931E-02/)
      real, dimension(50) :: PBA4  =  (/
     *  2.08426E+00, 1.53714E+00,-2.87496E-01, 4.06380E-01,-3.59788E-01,
     * -1.87814E-01, 0.00000E+00, 0.00000E+00, 2.01362E-01,-1.21604E-01,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 7.86304E+00,
     *  2.51878E+00, 2.91455E+00, 4.32308E+00, 6.77054E-02,-2.39125E-01,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  1.57976E+00,-5.44598E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * -5.30593E-01,-5.02237E-01,-2.05258E-01, 2.62263E-01,-2.50195E-01,
     * 4.28151E-01, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00/)
C         WINF
      real, dimension(50) :: PCA1  =  (/
     *  0.00000E+00, 1.31026E+01,-4.93171E+01, 2.51045E+01,-1.30531E+01,
     *  6.56421E-01, 2.75633E+01, 4.36433E+00, 1.04638E+00, 5.77365E+01,
     *  0.00000E+00,-6.27766E+00, 2.33010E+00,-1.41351E+01, 2.49653E-01,
     *  0.00000E+00, 0.00000E+00, 8.00000E+01, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 1.03817E-02,-1.70950E+01,-1.92295E+00, 0.00000E+00,
     *  0.00000E+00,-1.17490E+01,-7.14788E-01, 6.72649E+00, 0.00000E+00,
     *  0.00000E+00,-1.57793E+02,-1.70815E+00,-7.92416E+00,-1.67372E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 1.87973E-01,
     * -1.61602E-01,-1.13832E-01,-7.22447E-01, 2.21119E-02, 0.00000E+00,
     *-3.01967E+00,-1.72798E-01,-5.15055E-03,-1.23477E-02, 3.60805E-03/)
      real, dimension(50) :: PCA2  =  (/
     * -1.36730E+00, 0.00000E+00, 1.24390E-02, 0.00000E+00,-1.36577E+00,
     *  3.18101E-02, 0.00000E+00, 0.00000E+00, 0.00000E+00,-1.39334E+01,
     *  1.42088E-02, 0.00000E+00, 0.00000E+00, 0.00000E+00,-4.72219E+00,
     * -7.47970E+00,-4.96528E+00, 0.00000E+00, 1.24712E+00,-2.56833E+01,
     * -4.26630E+01, 3.92431E+04,-2.57155E+00,-4.35589E-02, 0.00000E+00,
     *  0.00000E+00, 2.02425E+00,-1.48131E+00,-7.72242E-01, 2.99008E+04,
     *  4.50148E-03, 5.29718E-03,-1.26697E-02, 3.20909E-02, 0.00000E+00,
     *  0.00000E+00, 7.01739E+00, 3.11204E+00, 0.00000E+00, 0.00000E+00,
     * -2.13088E+00, 1.32789E+01, 5.07958E+00, 7.26537E-02, 2.87495E-01,
     * 9.97311E-03,-2.56440E+00, 0.00000E+00, 0.00000E+00, 3.00000E+00/)
      real, dimension(50) :: PCA3  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00,-9.90073E-03,-3.27333E-02,
     * -4.30379E+01,-2.87643E+01,-5.91793E+00,-1.50460E+02, 0.00000E+00,
     *  0.00000E+00, 6.55038E-03, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 6.18051E-03, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  1.40484E+00, 5.54554E+00, 0.00000E+00, 0.00000E+00, 7.93810E+00,
     * 1.57192E+00, 1.03971E+00, 9.88279E-01,-4.37662E-02,-2.15763E-02/)
      real, dimension(50) :: PCA4  =  (/
     * -2.31583E+00, 4.32633E+00,-1.12716E+00, 3.38459E-01, 4.66956E-01,
     *  7.18403E-01, 5.80836E-02, 4.12653E-01, 1.04111E-01,-8.30672E-02,
     * -5.55541E+00,-4.97473E+00,-2.03007E+01, 0.00000E+00,-6.06235E-01,
     * -1.73121E-01, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 9.29850E-02,-6.38131E-02,
     *  3.93037E-02, 5.21942E-02, 2.26578E-02, 4.13157E-02, 0.00000E+00,
     *  6.28524E+00, 4.43721E+00,-4.31270E+00, 2.32787E+00, 2.55591E-01,
     *  1.60098E+00,-1.20649E+00, 3.05042E+00,-1.88944E+00, 5.35561E+00,
     *  2.02391E-01, 4.62950E-02, 3.39155E-01, 7.94007E-02, 6.30345E-01,
     * 1.93554E-01, 3.93238E-01, 1.76254E-01,-2.51359E-01,-7.06879E-01/)
C       UGN1(1)
      real, dimension(50) :: PBB1  =  (/
     *  6.22831E-01, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  5.90566E+00, 0.00000E+00, 0.00000E+00,-3.20571E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00,-8.30368E-01, 1.39396E-02,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 2.40657E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00,-4.80790E+00,-1.62744E+00, 2.21119E-02, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00/)
      real, dimension(50) :: PBB2  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 4.00000E+00/)
      real, dimension(50) :: PBB3  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 2.10531E-01,
     * -8.94829E-01, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00/)
C         UGN1(1)
      real, dimension(50) :: PCB1  =  (/
     *  5.45009E-01, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * -3.60304E+00, 0.00000E+00, 0.00000E+00,-5.04071E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 5.62113E-01, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 1.14657E+01, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 4.65483E-01, 1.73636E+00, 2.21119E-02, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00/)
      real, dimension(50) :: PCB2  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 4.00000E+00/)
      real, dimension(50) :: PCB3  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,-8.30769E-01,
     *  7.73649E-01, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00/)
C         UN1(1)
      real, dimension(50) :: PBC1  =  (/
     *  6.09940E-01, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 1.39396E-02,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 2.21119E-02, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00/)
      real, dimension(50) :: PBC2  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 4.00000E+00/)
      real, dimension(50) :: PBC3  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00/)
C        UN1(1)
      real, dimension(50) :: PCC1  =  (/
     *  5.46739E-01, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 2.21119E-02, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00/)
      real, dimension(50) :: PCC2  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 4.00000E+00/)
      real, dimension(50) :: PCC3  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00/)
C        UN1(2)
      real, dimension(50) :: PBD1  =  (/
     *  4.99007E-01, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  2.59994E+00, 0.00000E+00, 0.00000E+00,-1.78418E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00,-5.24986E+00, 1.39396E-02,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 2.77918E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 2.21119E-02, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00/)
      real, dimension(50) :: PBD2  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 4.00000E+00/)
      real, dimension(50) :: PBD3  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 5.68996E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00/)
C         UN1(2)
      real, dimension(50) :: PCD1  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * -7.26156E+00, 0.00000E+00, 0.00000E+00,-4.12416E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00,-2.88934E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 3.65720E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 2.21119E-02, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00/)
      real, dimension(50) :: PCD2  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 4.00000E+00/)
      real, dimension(50) :: PCD3  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 2.01835E-01,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00/)
C        UN1(3)
      real, dimension(50) :: PBE1  =  (/
     *  0.00000E+00,-1.37217E+01, 0.00000E+00, 2.38712E-01,-3.92230E+00,
     *  6.11035E+00,-1.57794E+00,-5.87709E-01, 1.21178E+01, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 5.23202E+01, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00,-2.22836E+03, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00,-3.94006E+00, 1.39396E-02,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 3.99844E-01, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00,-1.38936E+00, 2.22534E+00, 2.21119E-02, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00/)
      real, dimension(50) :: PBE2  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 4.00000E+00/)
      real, dimension(50) :: PBE3  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 4.35518E-01, 8.40051E-01, 0.00000E+00,-8.88181E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 6.81729E-01, 9.67536E-01,
     *  0.00000E+00,-9.67836E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00/)
C          UN1(3)
      real, dimension(50) :: PCE1  =  (/
     *  0.00000E+00,-2.75655E+01,-6.61134E+00, 4.85118E+00, 8.15375E-01,
     * -2.62856E+00, 2.99508E-02,-2.00532E-01,-9.35618E+00, 1.17196E+01,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00,-2.43848E+00, 1.90065E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00,-3.37525E-01, 1.76471E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00/)
      real, dimension(50) :: PCE2  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 4.00000E+00/)
      real, dimension(50) :: PCE3  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00,-9.23682E-01,-8.84150E-02, 0.00000E+00,-9.88578E-01,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00,-1.00747E+00,-1.07468E-02,
     *  0.00000E+00,-3.66376E-01, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00/)
C           UN1(4)
      real, dimension(50) :: PBF1  =  (/
     *  0.00000E+00, 1.02709E+01, 0.00000E+00,-1.42016E+00,-4.90438E+00,
     * -9.11544E+00,-3.80570E+00,-2.09013E+00, 1.32939E+01,-1.28062E+01,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 1.23024E+01, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 3.92126E+02, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 1.39396E-02,
     *  0.00000E+00, 0.00000E+00,-5.56532E+00,-1.27046E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00,-3.03553E+00,-9.09832E-01, 2.21119E-02, 0.00000E+00,
     * 8.89965E-01, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00/)
      real, dimension(50) :: PBF2  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 9.19210E-01, 0.00000E+00, 0.00000E+00, 4.00000E+00/)
      real, dimension(50) :: PBF3  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00,-2.46693E-01, 7.44650E-02, 3.84661E-01, 9.44052E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00,-2.25083E-01, 1.54206E-01,
     *  4.41303E-01, 8.74742E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00/)
C           UN1(4)
      real, dimension(50) :: PCF1  =  (/
     *  0.00000E+00, 3.61143E+00,-8.24679E+00, 1.70751E+00, 1.16676E+00,
     *  6.24821E+00,-5.68968E-01, 8.53046E-01,-6.94168E+00, 1.04152E+01,
     * -3.70861E+01, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00,-1.23336E+01, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 5.33958E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00,-6.43682E-01,-1.00000E+00, 0.00000E+00,
     *  0.00000E+00,-1.00000E+00, 0.00000E+00,-5.47300E-01, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00,-8.58764E-01, 4.72310E-01, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00/)
      real, dimension(50) :: PCF2  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 4.00000E+00/)
      real, dimension(50) :: PCF3  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 3.37325E-01,-3.57698E-02,-6.97393E-01, 1.35387E+01,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 2.78162E-01,-2.33383E-01,
     * -7.12994E-01, 1.29234E+01, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00/)
C         UN1(5)
      real, dimension(50) :: PBG1  =  (/
     *  0.00000E+00,-1.71856E+00, 5.32877E+00, 5.33548E-01,-2.66034E+00,
     *  6.76192E-01, 2.25618E+00,-5.78954E-01,-2.69685E+00, 1.21933E+00,
     * -6.13650E+00, 7.79531E-01, 1.63652E+00, 3.63835E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 7.51539E+00,-5.27337E-01, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 1.06625E-01, 1.39396E-02,
     *  0.00000E+00, 0.00000E+00,-1.07240E+00,-8.31257E-01, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 7.04016E-01, 0.00000E+00,
     *  7.56158E-01,-4.21268E-02, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 1.02843E+00, 5.21034E-01, 2.21119E-02, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00/)
      real, dimension(50) :: PBG2  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 4.12504E+00, 1.08459E-01, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *-3.16261E-01, 0.00000E+00,-1.44288E-01, 0.00000E+00, 4.00000E+00/)
      real, dimension(50) :: PBG3  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,-2.36181E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00/)
C         UN1(5)
      real, dimension(50) :: PCG1  =  (/
     *  0.00000E+00, 3.47155E+00, 1.76102E+01, 2.80371E+00,-2.08556E+00,
     *  1.10473E+00, 6.74582E+00,-5.75988E-01, 1.02708E+00,-2.23381E+01,
     *  8.60171E+00, 5.12046E-01,-8.12861E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 9.11036E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 3.89742E+00, 2.01725E-01, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 5.06308E-01, 2.04596E-01, 0.00000E+00,
     *  4.40377E+00, 0.00000E+00, 0.00000E+00, 2.20760E+00, 0.00000E+00,
     * -1.36478E+00, 2.38097E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00,-7.08949E-02,-1.61277E-01, 2.21119E-02, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00/)
      real, dimension(50) :: PCG2  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00,-2.16898E+00,-5.31596E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 2.53060E+00, 0.00000E+00,-7.17287E-01, 0.00000E+00, 4.00000E+00/)
      real, dimension(50) :: PCG3  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,-1.91762E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00/)
C          UGN1(2 
      real, dimension(50) :: PBH1  =  (/
     *  0.00000E+00,-7.70936E-01, 1.58158E+00, 3.61790E+00,-1.51748E+00,
     * -5.66098E-01, 1.69393E+00,-4.60489E-01,-8.31527E-01,-4.66437E-01,
     * -1.21750E+00, 0.00000E+00, 0.00000E+00, 1.56505E+02, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00,-5.19321E+01, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 1.39396E-02,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 3.09223E-01, 1.33715E-01, 2.21119E-02, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00/)
      real, dimension(50) :: PBH2  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 4.00000E+00/)
      real, dimension(50) :: PBH3  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00/)
C          UGN1(2)
      real, dimension(50) :: PCH1  =  (/
     *  0.00000E+00, 1.72324E-01, 3.08033E-01, 4.55771E-01, 1.46516E-01,
     *  1.97176E-01,-1.53329E-01, 6.91877E-02,-3.07184E-01, 2.65686E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00,-2.24369E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 4.04079E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  4.99627E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00,-7.83317E-03,-6.88967E-02, 2.21119E-02, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00/)
      real, dimension(50) :: PCH2  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 4.00000E+00/)
      real, dimension(50) :: PCH3  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00/)
C          UN2(2)
      real, dimension(50) :: PBI1  =  (/
     *  0.00000E+00,-7.99767E-01,-3.24774E-01, 7.70975E-01, 6.71796E-01,
     *  5.65483E-01,-2.99727E+00, 3.32448E+00,-9.15018E-01, 5.97656E+00,
     *  0.00000E+00,-1.19515E+00,-8.30457E-01, 3.26074E+00, 0.00000E+00,
     *  0.00000E+00,-1.58365E+00, 7.44825E-02, 5.91372E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00,-1.41511E-01,-3.01048E+00,
     *  2.35960E+01, 0.00000E+00,-1.70352E+00,-2.39746E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 1.30488E+00, 0.00000E+00,
     *  5.95132E-01, 5.64301E-01, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 5.30317E-01, 5.66569E-01, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00/)
      real, dimension(50) :: PBI2  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 5.72367E+00, 1.58411E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 1.04557E-01, 0.00000E+00,-2.04710E-01, 0.00000E+00, 5.00000E+00/)
C          UN2(2)
      real, dimension(50) :: PCI1  =  (/
     *  0.00000E+00, 6.34487E+00, 9.84162E+00, 3.42136E+00,-5.10607E+00,
     * -8.58745E-02, 3.11501E+00, 5.34570E-01, 1.18027E+00, 4.28027E+00,
     *  4.75123E+00, 6.40947E-01,-4.15165E+00,-1.38154E+01, 0.00000E+00,
     *  0.00000E+00, 1.13145E+01,-5.15954E+00, 0.00000E+00, 0.00000E+00,
     *  1.35576E+01, 0.00000E+00,-5.78982E+00,-2.22043E+00, 3.36776E+00,
     *  3.04791E+01, 0.00000E+00, 2.94709E+00,-4.17536E-01,-1.59855E+00,
     * -2.18320E+00, 1.68269E+01, 0.00000E+00, 1.00829E+00, 0.00000E+00,
     * -6.85096E-01, 2.07822E-01, 3.50168E-01,-3.03662E+01, 0.00000E+00,
     *  0.00000E+00,-1.65726E-01,-8.97831E-02, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00,-5.24159E+00, 0.00000E+00,-3.52218E+00/)
      real, dimension(50) :: PCI2  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 5.69093E-01,-7.44918E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 2.10865E+00, 0.00000E+00, 1.76776E-01, 1.54755E+00, 5.00000E+00/)
C          UN2(3)
      real, dimension(50) :: PBJ1  =  (/
     *  0.00000E+00, 2.28657E+00, 4.96548E-01, 6.99915E+00,-2.31540E+00,
     * -1.82163E-01,-5.00779E-01, 3.18199E-01,-6.14645E-01, 6.34816E+00,
     *  0.00000E+00, 7.94635E-01,-5.55565E-01, 3.85494E+00, 0.00000E+00,
     *  0.00000E+00,-3.96109E+00, 1.90775E-01, 4.51396E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00,-5.04618E-01,-4.14385E+00,
     *  2.30244E+01, 0.00000E+00, 1.00689E+00, 5.75680E-02, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 8.56741E-01, 0.00000E+00,
     *  9.54921E-02, 5.56659E-01, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 1.38503E-01, 4.50415E-01, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00/)
      real, dimension(50) :: PBJ2  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 2.22813E-01,-8.63549E-02, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 1.37970E-01, 0.00000E+00,-3.25612E-01, 0.00000E+00, 5.00000E+00/)
C          UN2(3)
      real, dimension(50) :: PCJ1  =  (/
     *  0.00000E+00, 5.07608E+00, 3.31479E+00, 3.01548E-01,-1.12100E+00,
     * -7.63711E-02, 2.29748E+00,-1.36699E+00, 7.53433E-01, 3.60702E+01,
     * -1.55266E+00, 1.47382E+00,-2.53895E+00,-1.47720E+01, 0.00000E+00,
     *  0.00000E+00, 1.11787E+01,-1.06256E+01, 0.00000E+00, 0.00000E+00,
     *  7.86391E+00, 0.00000E+00,-8.61020E+00,-1.59313E+00,-5.17013E+00,
     *  1.20468E+00, 0.00000E+00, 5.76509E-01, 9.96195E-01,-1.45539E+00,
     * -1.79950E+01, 8.76957E+00, 0.00000E+00,-1.22863E+00, 0.00000E+00,
     * -6.19019E-01,-1.09571E-01,-4.31325E-02,-4.21981E+01, 0.00000E+00,
     *  0.00000E+00,-1.51519E-01,-1.24067E-01, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00,-6.39248E+00, 0.00000E+00, 6.64508E-01/)
      real, dimension(50) :: PCJ2  =  (/
     * -7.33184E-01,-9.72031E-03, 1.36789E+00,-8.62311E-01,-3.06395E-03,
     *  2.53354E-01,-2.40918E-01,-4.06932E-02,-5.82223E-01, 0.00000E+00,
     * -8.70285E-01, 7.72318E-01,-6.54213E-01,-2.19231E+01,-1.56509E-01,
     *  2.71745E-01, 5.93538E-01, 2.27757E-01,-5.98215E-01, 3.96457E-01,
     *  2.98705E-01, 1.78618E-01,-5.24538E-01, 1.16439E-01, 7.56829E-02,
     * -4.26809E-01, 5.77187E-01, 8.65450E-01,-7.53614E-01, 1.38381E-01,
     * -1.82265E-01, 2.85263E-01, 4.51322E-01, 1.02775E-01, 3.55731E-01,
     * -4.60896E-01,-3.13037E+01,-2.70818E+00,-7.84847E-01, 0.00000E+00,
     * -1.03473E-01,-3.87649E-01,-1.22613E-01, 0.00000E+00, 0.00000E+00,
     * 8.91325E-01, 0.00000E+00, 1.06189E-01, 9.13030E-02, 5.00000E+00/)
C          UN2(4)
      real, dimension(50) :: PBK1  =  (/
     *  0.00000E+00, 2.94921E+00, 2.79238E+00, 2.58949E+00, 3.56459E-01,
     *  3.12952E-01, 3.34337E+00,-2.83209E+00,-1.05979E+00, 3.92313E+00,
     *  0.00000E+00, 1.73703E-01,-3.23441E-01, 4.15836E+00, 0.00000E+00,
     *  0.00000E+00,-1.77156E+00, 6.44113E-01, 1.88743E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00,-4.64778E-01,-4.23560E+00,
     *  2.27271E+01, 0.00000E+00,-4.89468E-01, 1.82689E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 4.38217E-02, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 8.62449E-02, 4.46041E-01, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00/)
      real, dimension(50) :: PBK2  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00,-1.40393E-01, 1.01821E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 5.00000E+00/)
C          UN2(4)
      real, dimension(50) :: PCK1  =  (/
     *  0.00000E+00, 6.04465E+00, 4.50924E+00, 3.84425E-02,-8.70772E-01,
     * -9.55408E-02, 2.28287E+00,-4.37834E-01, 3.57839E-01, 7.20721E+01,
     * -4.41757E+00,-9.13648E-01,-8.71866E-01,-6.26173E+00, 0.00000E+00,
     *  0.00000E+00, 5.92817E+00, 6.15853E+00, 0.00000E+00, 0.00000E+00,
     * -4.89060E+00, 0.00000E+00,-8.30378E+00, 1.07462E-01, 1.08471E+02,
     *  3.39150E+01,-4.57863E+00,-7.18349E-02,-2.71703E-01,-8.96297E+00,
     * -2.37986E+01, 4.11880E+00, 0.00000E+00,-9.95820E-01, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00,-8.91622E+00,-6.85950E+01, 0.00000E+00,
     *  0.00000E+00,-3.62769E-02,-1.65893E-01, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00,-2.94563E+00, 0.00000E+00, 1.23581E+00/)
      real, dimension(50) :: PCK2  =  (/
     * -6.06026E-01,-6.50229E-01, 1.91330E+00,-1.00314E+00, 1.13346E-01,
     *  4.21885E-01,-3.97688E-01,-2.77437E-01,-6.65893E-01, 0.00000E+00,
     * -1.37646E+00, 1.35171E+00,-9.55595E-01,-1.96450E+01,-2.50039E-01,
     *  5.93389E-01, 9.87131E-01, 5.43559E-01,-1.04322E+00, 6.32546E-01,
     *  3.73259E-01, 5.22657E-01,-5.81400E-01,-1.26425E-01,-1.29843E-01,
     * -5.36598E-01, 8.02402E-01, 9.04347E-01,-1.10799E+00, 1.24800E-01,
     *  1.62487E-02, 2.84237E-01,-1.68866E+00, 5.07723E-01, 5.14161E-01,
     * -4.71292E-01,-3.03487E+01, 4.17455E-01,-1.12591E+00, 0.00000E+00,
     * -3.03544E-01,-6.60313E-01,-1.48606E-01, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 1.00607E+01, 5.00000E+00/)
C          UN2(5)
      real, dimension(50) :: PBL1  =  (/
     *  0.00000E+00, 2.52207E+00, 3.84550E+00, 1.68023E+00, 7.93489E-01,
     *  3.93725E-02,-2.79707E+00,-4.76621E-01,-1.19972E-01, 3.20454E-01,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 4.17146E+00, 0.00000E+00,
     *  0.00000E+00,-5.30699E-01, 9.14373E-01, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00,-4.84434E-02, 1.85902E-01, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00/)
      real, dimension(50) :: PBL2  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 5.00000E+00/)
C          UN2(5)
      real, dimension(50) :: PCL1  =  (/
     *  0.00000E+00, 1.55386E+01, 4.21418E+00,-9.70151E-01,-8.77326E-01,
     *  2.65813E-02, 1.40164E+00,-9.03874E-01, 3.17281E-03, 9.26891E+01,
     * -4.96004E+00, 0.00000E+00, 0.00000E+00,-4.17851E+00, 0.00000E+00,
     *  0.00000E+00,-1.14760E+01, 2.67744E+00, 0.00000E+00, 0.00000E+00,
     * -1.60056E+01, 0.00000E+00,-7.14647E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00,-2.89639E+00, 0.00000E+00, 0.00000E+00,-3.88601E+00,
     * -1.65784E+01, 8.44796E-01, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00,-3.75324E+00,-6.24047E+01, 0.00000E+00,
     *  0.00000E+00,-2.86808E-02,-1.95891E-01, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00,-3.10534E-01, 0.00000E+00,-3.37448E+00/)
      real, dimension(50) :: PCL2  =  (/
     *  1.63964E-02,-1.45191E+00, 1.85618E+00,-9.61979E-01, 3.93783E-01,
     *  4.21681E-01,-5.30254E-01,-2.96232E-01,-7.55211E-01, 0.00000E+00,
     * -1.85443E+00, 1.88047E+00,-1.07818E+00,-1.35373E+01,-3.05785E-01,
     *  7.82159E-01, 1.32586E+00, 2.34413E-01,-7.47152E-01, 9.92893E-01,
     * -2.80110E-02, 3.61747E-01,-4.16280E-01,-3.46427E-01,-5.76431E-01,
     * -2.13906E-01, 9.51184E-01, 3.69403E-01,-1.35563E+00, 6.59534E-02,
     *  1.39764E-01, 4.50687E-01,-1.22025E+00, 5.73280E-02, 7.49303E-01,
     * -8.37947E-01,-3.01332E+01, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * -4.36697E-01,-7.76068E-01,-1.41680E-01, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 1.21958E+01, 5.00000E+00/)
C          UN2(6)
      real, dimension(50) :: PBM1  =  (/
     *  0.00000E+00, 3.13842E+00,-8.20417E-01, 3.72282E+00,-5.20477E-01,
     * -3.61867E-01,-2.92604E+00, 3.13013E-01,-1.38865E-01, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 1.30060E+01, 0.00000E+00,
     *  0.00000E+00, 1.67696E+00, 9.85990E-01, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00,-8.46922E-02, 5.59429E-03, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00/)
      real, dimension(50) :: PBM2  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 5.00000E+00/)
C          UN2(6)
      real, dimension(50) :: PCM1  =  (/
     *  0.00000E+00, 1.78539E+01, 1.07314E+01,-1.13212E+00, 1.59867E-02,
     *  1.53736E-01, 2.25710E+00,-9.39080E-01,-9.72620E-02, 9.89789E+01,
     * -5.17469E+00, 0.00000E+00, 0.00000E+00,-2.98597E+00, 0.00000E+00,
     *  0.00000E+00,-2.04707E+01, 4.92899E+00, 0.00000E+00, 0.00000E+00,
     * -1.44316E+01, 0.00000E+00,-3.31557E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00,-6.22743E+00, 0.00000E+00, 0.00000E+00,-4.34344E+00,
     * -8.29640E+00,-3.03800E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 2.79387E+00,-5.23752E+01, 0.00000E+00,
     *  0.00000E+00,-2.59963E-02,-1.73426E-02, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00,-5.37220E+00, 0.00000E+00,-6.53478E-01/)
      real, dimension(50) :: PCM2  =  (/
     *  3.48181E-01,-1.88980E+00, 1.47787E+00,-7.92670E-01, 6.49224E-01,
     *  5.96079E-01,-1.04901E+00,-5.24003E-01,-6.77311E-01, 0.00000E+00,
     * -2.26873E+00, 2.80910E+00,-9.84994E-01,-6.79661E+00,-3.71975E-01,
     *  1.13310E+00, 1.57164E+00, 2.15176E-01,-5.58583E-01, 1.16045E+00,
     *  2.05395E-02, 2.27714E-01, 1.41203E-01,-3.92231E-01,-8.82859E-01,
     *  4.90400E-01, 1.14013E+00,-2.25250E-01,-1.64930E+00, 5.73434E-02,
     *  1.89857E-01, 4.31221E-01,-1.35345E+00,-2.94189E-01, 6.87530E-01,
     * -7.78284E-01,-2.88975E+01, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * -3.98115E-01,-7.40699E-01,-8.28264E-02, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 2.02069E+00, 5.00000E+00/)
C          UN2(7)
      real, dimension(50) :: PBN1  =  (/
     *  0.00000E+00, 2.08818E+00,-1.96235E+00, 4.55317E+00,-1.76012E+00,
     * -4.75258E-01,-1.44220E+00,-3.28566E-01,-1.41177E-01, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 1.49146E+01, 0.00000E+00,
     *  0.00000E+00, 1.73222E+00, 9.91286E-01, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00,-1.35468E-01, 1.91833E-02, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00/)
      real, dimension(50) :: PBN2  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 5.00000E+00/)
C          UN2(7)
      real, dimension(50) :: PCN1  =  (/
     *  0.00000E+00, 1.25645E+01, 2.43937E+01,-4.89691E-01,-5.46437E-01,
     *  1.22200E-01, 2.89309E+00,-2.85509E-01,-2.27122E-01, 9.54192E+01,
     * -4.07394E+00, 0.00000E+00, 0.00000E+00,-3.04354E+00, 0.00000E+00,
     *  0.00000E+00,-2.36547E+01, 1.04903E+01, 0.00000E+00, 0.00000E+00,
     * -8.32274E+00, 0.00000E+00,-3.34712E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00,-7.95953E+00, 0.00000E+00, 0.00000E+00,-5.83474E+00,
     * -1.48074E+00, 1.02268E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 6.19470E+00,-3.90767E+01, 0.00000E+00,
     *  0.00000E+00,-3.58136E-03, 1.22289E-03, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00,-8.49787E+00, 0.00000E+00,-3.97498E+00/)
      real, dimension(50) :: PCN2  =  (/
     *  3.79580E-01,-1.93595E+00, 2.89114E+00,-4.73457E-01, 7.67548E-01,
     *  5.66859E-01,-1.28683E+00,-8.37174E-01,-3.48022E-01, 0.00000E+00,
     * -2.62865E+00, 3.50575E+00,-7.93257E-01,-8.10692E-01,-4.99450E-01,
     *  1.56654E+00, 1.63039E+00, 7.58900E-02,-4.30952E-01, 1.23068E+00,
     *  1.06404E-01, 4.73870E-02, 5.50559E-01,-4.11375E-01,-9.94162E-01,
     *  1.35025E+00, 1.26053E+00,-7.34502E-01,-2.01952E+00, 2.05398E-01,
     * -4.77248E-02, 2.41549E-01,-9.32522E-01,-5.63663E-01, 5.34833E-01,
     * -5.77563E-01,-2.65033E+01, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * -2.42317E-01,-7.33679E-01,-7.85537E-02, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 1.56842E-01, 5.00000E+00/)
C          UN2(8)
      real, dimension(50) :: PBO1  =  (/
     *  0.00000E+00, 7.00409E-01,-4.17017E-01, 3.24757E+00,-1.28352E+00,
     * -4.23875E-01, 1.64346E+00,-1.20855E+00,-7.65316E-01, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00,-3.39417E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 2.68534E+01, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00,-1.56444E-01,-4.60043E-02, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00/)
      real, dimension(50) :: PBO2  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 5.00000E+00/)
C          UN2(8)
      real, dimension(50) :: PCO1  =  (/
     *  0.00000E+00, 7.30129E+00, 3.14811E+01,-7.06834E-02,-2.96193E-01,
     *  1.73817E-01, 1.62127E+00,-2.71556E-01,-2.05844E-01, 8.02088E+01,
     * -1.86956E-01, 0.00000E+00, 0.00000E+00,-9.43641E-01,-3.24716E+00,
     *  0.00000E+00,-2.32748E+01, 1.96724E+01, 0.00000E+00, 0.00000E+00,
     * -3.95949E+00, 0.00000E+00, 5.44787E-01, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00,-1.00161E+01, 0.00000E+00, 0.00000E+00,-4.57422E+00,
     *  4.31304E+00, 1.49868E+01, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 5.99489E+00,-2.82120E+01, 0.00000E+00,
     *  0.00000E+00, 4.03624E-02, 1.19463E-01, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00,-1.39050E+01, 0.00000E+00,-2.65634E+00/)
      real, dimension(50) :: PCO2  =  (/
     *  6.37036E-01,-1.77461E+00, 3.03103E+00,-1.49839E-01, 7.02027E-01,
     *  6.08841E-01,-9.27289E-01,-8.52362E-01, 5.61723E-01, 0.00000E+00,
     * -2.72061E+00, 3.66183E+00,-2.54943E-01, 2.94668E+00,-3.57898E-01,
     *  1.71858E+00, 1.58782E+00,-2.42995E-01,-3.57783E-01, 1.20157E+00,
     *  2.58895E-01,-1.05773E-01, 5.79397E-01,-3.30395E-01,-4.03569E-01,
     *  1.99175E+00, 1.21688E+00,-8.64350E-01,-1.95569E+00, 4.61136E-01,
     * -8.61382E-02, 3.38859E-01, 0.00000E+00,-5.78864E-01, 4.46659E-01,
     * -4.57428E-01,-1.99920E+01, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * -1.19841E-01,-4.56968E-01, 2.00180E-02, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00,-1.07368E+00, 5.00000E+00/)
C          UN2(9)
      real, dimension(50) :: PBP1  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 1.75863E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 3.18522E+01, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00/)
      real, dimension(50) :: PBP2  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 5.00000E+00/)
C          UN2(9)
      real, dimension(50) :: PCP1  =  (/
     *  0.00000E+00, 4.61019E-02, 3.50615E+01, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 6.15349E+01,
     *  4.28634E+00, 0.00000E+00, 0.00000E+00, 6.03982E+00,-4.72305E+00,
     *  0.00000E+00,-1.43678E+01, 3.62580E+01, 0.00000E+00, 0.00000E+00,
     *  1.26574E+00, 0.00000E+00,-2.77285E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00,-1.14802E+01, 0.00000E+00, 0.00000E+00,-1.11940E+01,
     * -1.39535E+00, 2.63070E+01, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00,-1.53024E+00,-2.14609E+01, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00,-1.26956E+01, 0.00000E+00, 5.49926E+00/)
      real, dimension(50) :: PCP2  =  (/
     *  9.80142E-01,-1.19016E+00, 2.75110E+00, 4.23423E-01, 5.89893E-01,
     *  4.94288E-01,-5.25954E-01,-8.51760E-01, 1.62676E+00, 0.00000E+00,
     * -1.90027E+00, 3.19950E+00, 4.72739E-01, 7.04179E+00,-1.43685E-03,
     *  1.43219E+00, 1.32136E+00,-2.92744E-03,-3.43680E-01, 7.75735E-01,
     *  6.92202E-01,-1.45519E-01, 6.97813E-02,-3.11588E-01, 6.65750E-01,
     *  2.33809E+00, 1.06694E+00,-5.77590E-01,-1.33717E+00, 8.13367E-01,
     * -5.05737E-01, 5.99169E-01,-8.83386E-01,-4.38123E-01, 2.63649E-01,
     * -3.03448E-01,-1.28190E+01, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  1.45478E-02, 1.45491E-01, 2.40080E-01, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00,-3.86910E+00, 5.00000E+00/)
C          UN2(10)
      real, dimension(50) :: PBQ1  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 1.10647E+01, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 3.13252E+01, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00/)
      real, dimension(50) :: PBQ2  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 5.00000E+00/)
C          UN2(10)
      real, dimension(50) :: PCQ1  =  (/
     *  0.00000E+00,-3.03260E+00, 3.15488E+01, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 4.42798E+01,
     *  7.08849E+00, 0.00000E+00, 0.00000E+00, 1.64773E+01,-6.86505E+00,
     *  0.00000E+00,-6.27112E+00, 3.78373E+01, 0.00000E+00, 0.00000E+00,
     *  2.97763E+00, 0.00000E+00,-3.44134E-01, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00,-1.19424E+01, 0.00000E+00, 0.00000E+00,-1.64645E+01,
     * -2.27053E+00, 3.82330E+01, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 1.33140E-01,-2.08131E+01, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00,-7.04687E+00, 0.00000E+00, 6.52184E+00/)
      real, dimension(50) :: PCQ2  =  (/
     *  7.31799E-01,-2.75395E-01, 1.92467E+00, 8.71269E-01, 3.72836E-01,
     *  3.04967E-01, 7.72480E-02,-5.08596E-01, 1.99828E+00, 0.00000E+00,
     * -5.51169E-01, 2.12420E+00, 8.96069E-01, 1.12092E+01,-4.30438E-02,
     *  7.38391E-01, 6.12050E-01, 3.62981E-02,-1.02054E-01, 1.82404E-01,
     *  3.70643E-01,-1.68899E-01,-1.79628E-01,-1.21117E-01, 1.45823E+00,
     *  2.04352E+00, 7.83711E-01,-3.42979E-02,-2.31363E-01, 7.11253E-01,
     * -3.16353E-01, 6.21069E-01,-1.05676E+00,-4.03488E-01, 4.11595E-01,
     * -2.12535E-01,-6.51453E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  1.48238E-01, 6.38716E-01, 2.99311E-01, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00,-1.01846E+00, 5.00000E+00/)
C          UN2(11)
      real, dimension(50) :: PBR1  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 2.21764E+01, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 6.77475E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00/)
      real, dimension(50) :: PBR2  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 5.00000E+00/)
C          UN2(11)
      real, dimension(50) :: PCR1  =  (/
     *  0.00000E+00,-1.74115E+00, 2.66621E+01, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 3.13017E+01,
     *  6.86985E+00, 0.00000E+00, 0.00000E+00, 2.08835E+01,-7.86030E+00,
     *  0.00000E+00,-3.77141E+00, 3.87788E+01, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 1.31580E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00,-9.98927E+00, 0.00000E+00, 0.00000E+00,-1.71002E+01,
     * -9.88358E-01, 4.47756E+01, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 5.95029E-01,-2.11313E+01, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00,-3.84164E+00, 0.00000E+00, 0.00000E+00/)
      real, dimension(50) :: PCR2  =  (/
     *  3.07191E-01, 4.79094E-02, 6.72159E-01, 5.54185E-01, 1.82847E-01,
     * -1.23768E-02, 1.91637E-01,-2.89429E-02, 1.18297E+00, 0.00000E+00,
     *  2.37450E-01, 9.23551E-01, 6.05670E-01, 1.35990E+01,-1.64210E-01,
     *  5.38355E-03,-4.91246E-02,-1.06966E-01,-2.09635E-01,-3.23023E-02,
     * -3.41663E-02,-3.48871E-02,-2.62450E-01, 2.21492E-01, 1.43749E+00,
     *  1.08677E+00, 3.97778E-01, 3.61526E-01, 5.55950E-01, 3.53058E-01,
     * -5.93339E-02, 4.14203E-01,-6.05024E-01,-1.38714E-01, 2.78897E-01,
     * -8.92889E-02,-3.59033E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  9.90623E-02, 4.36170E-01, 7.95418E-02, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00,-1.11426E+00, 5.00000E+00/)
C          UN2(12)
      real, dimension(50) :: PBS1  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 3.07320E+01, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 1.60738E+01, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00/)
      real, dimension(50) :: PBS2  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 5.00000E+00/)
C          UN2(12)
      real, dimension(50) :: PCS1  =  (/
     *  0.00000E+00, 1.26217E+01, 2.30787E+01, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 2.00029E+01,
     * -2.88682E+00, 0.00000E+00, 0.00000E+00, 2.09439E+01,-4.56923E+00,
     *  0.00000E+00,-2.15929E+00, 3.87149E+01, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00,-7.98039E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00,-6.63423E+00, 0.00000E+00, 0.00000E+00,-5.84850E+00,
     *  3.72111E+00, 4.52300E+01, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 3.21872E-01, 0.00000E+00, 0.00000E+00/)
      real, dimension(50) :: PCS2  =  (/
     *  1.09405E-02,-4.35341E-02, 8.00586E-02, 1.48577E-01, 1.01602E-01,
     * -1.01104E-01,-1.98993E-02, 3.51174E-02, 2.41112E-01, 0.00000E+00,
     *  2.76479E-01, 1.97043E-01, 2.68708E-01, 1.39832E+01,-1.56638E-01,
     * -2.39101E-01,-1.50605E-01,-2.17139E-01,-2.59057E-01,-4.36362E-01,
     * -1.43496E-01, 7.51305E-02,-2.40850E-01, 1.34858E-01, 7.59193E-01,
     *  3.52708E-01, 1.29922E-01, 3.27957E-01, 5.35491E-01, 1.19120E-01,
     * -2.94029E-02, 1.76113E-01,-6.51597E-01, 3.61575E-02, 4.26836E-02,
     * -2.29297E-02,-4.27373E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * -2.78548E-02, 5.77322E-02,-1.02411E-01, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 5.00000E+00/)
C          UN2(13)
      real, dimension(50) :: PBT1  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 3.69447E+01, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 2.34073E+01, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00/)
      real, dimension(50) :: PBT2  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 5.00000E+00/)
C          UN2(13)
      real, dimension(50) :: PCT1  =  (/
     *  0.00000E+00, 1.22096E+01, 1.92342E+01, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 8.13667E+00,
     * -6.19078E+00, 0.00000E+00, 0.00000E+00, 2.37009E+01, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00,-7.87365E+01, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00,-1.12371E+01, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00,-2.76047E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 1.85864E+01, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00/)
      real, dimension(50) :: PCT2  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 5.00000E+00/)
C          UN2(14)
      real, dimension(50) :: PBU1  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 1.01008E+01, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 2.21469E+01, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00/)
      real, dimension(50) :: PBU2  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 5.00000E+00/)
C          UN2(14)
      real, dimension(50) :: PCU1  =  (/
     *  0.00000E+00,-1.40697E+00, 6.88709E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 3.67624E+02, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 1.58312E+01, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00,-2.46486E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00,-1.90327E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 1.13248E+01, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00/)
      real, dimension(50) :: PCU2  =  (/
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     *  0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00,
     * 0.00000E+00, 0.00000E+00, 0.00000E+00, 0.00000E+00, 5.00000E+00/)
      
      end module HWM_PARMW5

!=======================================================================
      
      module HWM_PARAMETERS
!-----------------------------------------------------------------------
!       These variables to translate from fortran77 variable
!       name-independent COMMON/PARMW5 used at several places with 
!       different variable names
!-----------------------------------------------------------------------

      real, dimension(200) :: PWB, PWC
      real, dimension(150) :: PWBL, PWCL, PWBLD,PWCLD, 
     $                        PB12, PC12, PB13, PC13,
     $                        PB14, PC14, PB15, PC15, PB15D, PC15D
      real, dimension(100,26) :: PWP
      
      end module HWM_PARAMETERS

!=======================================================================

      module HWM_CSW
      integer, dimension(25) :: SWM, SWC
      end module HWM_CSW

      module HWM_HWMC
      real, dimension(2) :: WBT, WCT
      end module HWM_HWMC

      module HWM_VPOLY2
      integer :: LVL = -1, MVL = -1
      real :: XVL = -999., CLAT, SLAT
      real, dimension(20,20) :: BT, BP
      end module HWM_VPOLY2

      module HWM_LTCOMP
      integer :: NSVL = -1
      real :: TLL = -999., CSTL, SSTL, C2STL, S2STL, C3STL, S3STL
      end module HWM_LTCOMP

      module HWM_LGCOMP
      integer :: NGVL = -1
      real :: XLL = -999., CLONG, SLONG, C2LONG, S2LONG
      end module HWM_LGCOMP

!=======================================================================

!========================================================================

      module HWM_CODE
      
      PRIVATE
      PUBLIC :: NWGWS5_F90
      SAVE

      CONTAINS

!-----------------------------------------------------------------------

      subroutine NWGWS5_F90( IYD, ALT, GLAT, GLONG, STL, 
     $                       F107A, F107, AP, W, IW )
!-----------------------------------------------------------------------
!      Horizontal wind model HWM93 covering all altitude regions
!      A. E. HEDIN  (1/25/93) (4/9/93)
!      Calling argument list made similar to GTS5 subroutine for
!       MSIS-86 density model and GWS4 for thermospheric winds.
!        IYD - DAY AS DDD (day of year from 1 to 365)
!        ALT - ALTITUDE(KM) 
!        GLAT - GEODETIC LATITUDE(DEG)
!        GLONG - GEODETIC LONGITUDE(DEG)
!        STL - LOCAL APPARENT SOLAR TIME(HRS)
!        F107A - 3 MONTH AVERAGE OF F10.7 FLUX (Use 150 in lower atmos.)
!        F107 - DAILY F10.7 FLUX FOR PREVIOUS DAY (Use 150 in lower atmos.)
!        AP - Two element array with
!             AP(1)  =  MAGNETIC INDEX(DAILY) (use 4 in lower atmos.)
!             AP(2) = CURRENT 3HR ap INDEX (used only when IW(9) = -1)
!        IW -  TO TURN ON AND OFF PARTICULAR VARIATIONS
!               IW IS A 25 ELEMENT ARRAY CONTAINING 0 FOR OFF, 1 
!               FOR ON, OR 2 FOR MAIN EFFECTS OFF BUT CROSS TERMS ON
!               FOR THE FOLLOWING VARIATIONS
!               1 - F10.7 EFFECT ON MEAN  2 - TIME INDEPENDENT
!               3 - SYMMETRICAL ANNUAL    4 - SYMMETRICAL SEMIANNUAL
!               5 - ASYMMETRICAL ANNUAL   6 - ASYMMETRICAL SEMIANNUAL
!               7 - DIURNAL               8 - SEMIDIURNAL
!               9 - DAILY AP             10 - ALL UT/LONG EFFECTS
!              11 - LONGITUDINAL         12 - UT AND MIXED UT/LONG
!              13 - MIXED AP/UT/LONG     14 - TERDIURNAL
!              16 - ALL WINDF VAR        17 - ALL WZL VAR
!              18 - ALL UN1 VAR          19 - ALL WDZL VAR
!              24 - ALL B FIELDS (DIV)   25 - ALL C FIELDS (CURL)
!
!             For example, to get zonal averages (no diurnal or
!             longitudinal variations) set IW(7),IW(8), IW(14),
!             and IW(10) equal to 0.  To just remove tidal variations 
!             set IW(7),IW(8), and IW(14) equal to 0.
!      OUTPUT
!        W(1)  =  MERIDIONAL (m/sec + Northward)
!        W(2)  =  ZONAL (m/sec + Eastward)
!-----------------------------------------------------------------------
      use HWM_PARAMETERS
      use HWM_CSW
      use HWM_HWMC

!-----------------------------------------------------------------------
!	... Parameters
!-----------------------------------------------------------------------
      integer, parameter :: MN1 = 5, MN2 = 14

!-----------------------------------------------------------------------
!	... Dummy args
!-----------------------------------------------------------------------
      integer, intent(in) :: IYD, IW(25)
      real, intent(in) :: ALT, GLAT, GLONG, STL, F107A, F107, AP(2)
      real, intent(out), dimension(2) :: W

!-----------------------------------------------------------------------
!	... Local variables
!-----------------------------------------------------------------------
      integer :: IYDa, IDAYinc, NNN = 3, MN2S = 1, MN2M = 1
      real :: ZN1(MN1)  =  (/ 200.,150.,130.,115.,100. /)
      real :: ZN2(MN2)  =  (/
     $   100.,90.,82.5,75.,67.5,60.,52.5,45.,37.5,30.,22.5,15.,7.5,0. /)
      real :: DAY, SoTL, SEC, S = 0.016, ZL = 200.
      real :: UN1(MN1,2), UGN1(2,2), UN2(MN2,2), UGN2(2,2)
      real, dimension(2) :: WINDF, WW, WZL, WDZL
      logical :: entered  =  .false.

      SAVE

      call SETSWITCH( IW )
      
      if( .not. entered ) then
         call SET_PARAMS()
         entered  =  .true.
      end if

!-----------------------------------------------------------------------
!	...     NEW TIME ADJUSTMENTS
!-----------------------------------------------------------------------
      IDAYinc = STL / 24.
      IYDa = IYD + IDAYinc
      SoTL = MOD( STL, 24. )
      DAY = REAL( IYDa )
      DAY = MOD( DAY, 365. ) + SoTL / 24.
      SEC = ( SoTL - GLONG/15.) * 3600.
      do while( SEC < 0. )
         SEC = SEC + 86400. 
      end do
      SEC = MOD( SEC, 86400. )

      if( ALT <= ZN1(MN1) ) GOTO 50

!-----------------------------------------------------------------------
!	...         EXOSPHERE WIND
!-----------------------------------------------------------------------
      call GLBW5E(DAY,SEC,GLAT,GLONG,STL,F107A,F107,AP,PWB,PWC,WINDF)
      WINDF(1) = SWM(16)*WINDF(1)
      WINDF(2) = SWM(16)*WINDF(2)

!-----------------------------------------------------------------------
!	...         WIND  AT ZL
!-----------------------------------------------------------------------
      call GLBW5M(DAY,SEC,GLAT,GLONG,STL,F107A,F107,AP,PWBL,PWCL,WW)
      WZL(1) = (PWBL(1)*WINDF(1)+WW(1))*SWM(17)*SWM(18)
      WZL(2) = (PWBL(1)*WINDF(2)+WW(2))*SWM(17)*SWM(18)
      UN1(1,1) = WZL(1)
      UN1(1,2) = WZL(2)

!-----------------------------------------------------------------------
!	...      WIND DERIVATIVE AT ZL
!-----------------------------------------------------------------------
      WW(1) = 0
      WW(2) = 0
      call GLBW5M(DAY,SEC,GLAT,GLONG,STL,F107A,F107,AP,PWBLD,PWCLD,WW)
      WDZL(1) = (PWBLD(1)*WINDF(1)+WW(1))*SWM(19)*SWM(18)
      WDZL(2) = (PWBLD(1)*WINDF(2)+WW(2))*SWM(19)*SWM(18)
      UGN1(1,1) = WDZL(1)*S
      UGN1(1,2) = WDZL(2)*S

      if( ALT >= ZL) GOTO 90

!-----------------------------------------------------------------------
!	...      WIND AT ZN1(2) (150)
!-----------------------------------------------------------------------
      call GLBW5M(DAY,SEC,GLAT,GLONG,STL,F107A,F107,AP,PB12,PC12,WW)
      UN1(2,1) = (PB12(1)*WINDF(1)+WW(1))*SWM(18)
      UN1(2,2) = (PB12(1)*WINDF(2)+WW(2))*SWM(18)

!-----------------------------------------------------------------------
!	...      WIND AT ZN1(3) (130)
!-----------------------------------------------------------------------
      call GLBW5M(DAY,SEC,GLAT,GLONG,STL,F107A,F107,AP,PB13,PC13,WW)
      UN1(3,1) = WW(1)*SWM(18)
      UN1(3,2) = WW(2)*SWM(18)

!-----------------------------------------------------------------------
!	...      WIND AT ZN1(4) (115)
!-----------------------------------------------------------------------
      call GLBW5M(DAY,SEC,GLAT,GLONG,STL,F107A,F107,AP,PB14,PC14,WW)
      UN1(4,1) = WW(1)*SWM(18)
      UN1(4,2) = WW(2)*SWM(18)

   50 CONTINUE
      MNN = MAX(1,MIN(MN2,NNN+1))
      if( ALT < ZN2(MNN)) GOTO 40

!-----------------------------------------------------------------------
!	...      WIND AT ZN1(5) (100)
!-----------------------------------------------------------------------
      call GLBW5M(DAY,SEC,GLAT,GLONG,STL,F107A,F107,AP,PB15,PC15,WW)
      UN1(5,1) = WW(1)*SWM(18)
      UN1(5,2) = WW(2)*SWM(18)

!-----------------------------------------------------------------------
!	...    WIND DERIVATIVE AT ZN1(5) (100)
!-----------------------------------------------------------------------
      call GLBW5M(DAY,SEC,GLAT,GLONG,STL,F107A,F107,AP,PB15D,PC15D,WW)
      UGN1(2,1) = WW(1)*SWM(18)
      UGN1(2,2) = WW(2)*SWM(18)
      
      if( ALT >= ZN1(MN1)) GOTO 90

      UGN2(1,1) = UGN1(2,1)
      UGN2(1,2) = UGN1(2,2)
      UN2(1,1) = UN1(5,1)
      UN2(1,2) = UN1(5,2)
      GOTO 45
   40 CONTINUE
      UGN2(1,1) = 1.E30
      UGN2(1,2) = 1.E30
      UN2(1,1) = 0
      UN2(1,2) = 0
   45 CONTINUE

      do I = 1,MN2
        if( ALT > ZN2(I)) GOTO 12
      end do
      I = MN2
   12 IZ = I
      MN2S = MAX(1,MIN(IZ-1,IZ-NNN))
      MN2E = MIN(MN2,MAX(MN2S+1,IZ-1+NNN))
      do I = MN2S,MN2E
        II = 2*(I-2)+1
        if( I > 1 ) then
          call GLBW5S(DAY,GLAT,GLONG,STL,PWP(1,II),PWP(1,II+1),WW)
          UN2(I,1) = WW(1)*SWM(20)
          UN2(I,2) = WW(2)*SWM(20)
        end if
      end do
      MN2M = MN2E-MN2S+1
      UGN2(2,1) = 1.E30
      UGN2(2,2) = 1.E30
   90 CONTINUE

!-----------------------------------------------------------------------
!	...    WIND AT ALTITUDE
!-----------------------------------------------------------------------
      W(1) = WPROF(ALT,ZL,S,WINDF(1),WZL(1),WDZL(1),
     $  MN1,ZN1,UN1(1,1),UGN1(1,1),MN2M,ZN2(MN2S),UN2(MN2S,1),UGN2(1,1))
      W(2) = WPROF(ALT,ZL,S,WINDF(2),WZL(2),WDZL(2),
     $  MN1,ZN1,UN1(1,2),UGN1(1,2),MN2M,ZN2(MN2S),UN2(MN2S,2),UGN2(1,2))

      end subroutine NWGWS5_F90

!=======================================================================

      subroutine SET_PARAMS()
      
      use HWM_PARMW5
      use HWM_PARAMETERS
      
      implicit none
      
      PWB  =    (/ PBA1, PBA2, PBA3, PBA4 /)
      PWC  =    (/ PCA1, PCA2, PCA3, PCA4 /)
      PWBL  =   (/ PBB1, PBB2, PBB3 /)
      PWCL  =   (/ PCB1, PCB2, PCB3 /)
      PWBLD  =  (/ PBC1, PBC2, PBC3 /)
      PWCLD  =  (/ PCC1, PCC2, PCC3 /)
      PB12  =   (/ PBD1, PBD2, PBD3 /)
      PC12  =   (/ PCD1, PCD2, PCD3 /)
      PB13  =   (/ PBE1, PBE2, PBE3 /)
      PC13  =   (/ PCE1, PCE2, PCE3 /)
      PB14  =   (/ PBF1, PBF2, PBF3 /)
      PC14  =   (/ PCF1, PCF2, PCF3 /)
      PB15  =   (/ PBG1, PBG2, PBG3 /)
      PC15  =   (/ PCG1, PCG2, PCG3 /)
      PB15D  =  (/ PBH1, PBH2, PBH3 /)
      PC15D  =  (/ PCH1, PCH2, PCH3 /)
      PWP  =  RESHAPE( (/ PBI1, PBI2, PCI1, PCI2, PBJ1, PBJ2, 
     $                  PCJ1, PCJ2, PBK1, PBK2, PCK1, PCK2, 
     $                  PBL1, PBL2, PCL1, PCL2, PBM1, PBM2, 
     $                  PCM1, PCM2, PBN1, PBN2, PCN1, PCN2, 
     $                  PBO1, PBO2, PCO1, PCO2, PBP1, PBP2, 
     $                  PCP1, PCP2, PBQ1, PBQ2, PCQ1, PCQ2, 
     $                  PBR1, PBR2, PCR1, PCR2, PBS1, PBS2, 
     $                  PCS1, PCS2, PBT1, PBT2, PCT1, PCT2, 
     $                  PBU1, PBU2, PCU1, PCU2 /),          (/100,26/) )
      
      end subroutine SET_PARAMS
      
!=======================================================================

      function WPROF( Z, ZL, S, UINF, ULB, ULBD, MN1, ZN1, UN1, UGN1,
     $                MN2, ZN2, UN2, UGN2 )
      DIMENSION ZN1(MN1),UN1(MN1),UGN1(2),XS(15),YS(15),Y2OUT(15)
      DIMENSION ZN2(MN2),UN2(MN2),UGN2(2)
      SAVE
      if( Z >= ZL ) then
        X = S*(Z-ZL)
        F = EXP(-X)
        WPROF = UINF+(ULB-UINF)*F+(ULB-UINF+ULBD)*X*F
        RETURN
      end if
      if( Z >= ZN1(MN1) .and. Z < ZN1(1) ) then
        MN = MN1
        Z1 = ZN1(1)
        Z2 = ZN1(MN)
        ZDIF = Z2-Z1
        do 10 K = 1,MN
          XS(K) = (ZN1(K)-Z1)/ZDIF
          YS(K) = UN1(K)
   10   CONTINUE
        YD1 = UGN1(1)*ZDIF
        YD2 = UGN1(2)*ZDIF
        call SPLINE(XS,YS,MN,YD1,YD2,Y2OUT)
C      Eq.
        X = (Z-Z1)/ZDIF
C      Eq. 
        call SPLINT(XS,YS,Y2OUT,MN,X,Y)
        WPROF = Y
        RETURN
      end if
      if( Z < ZN2(1) ) then
        MN = MN2
        Z1 = ZN2(1)
        Z2 = ZN2(MN)
        ZDIF = Z2-Z1
        do K = 1, MN
          XS(K) = (ZN2(K)-Z1)/ZDIF
          YS(K) = UN2(K)
        end do
        YD1 = UGN2(1)
        if( UGN2(1) < 1.E30 ) YD1 = UGN2(1)*ZDIF
        YD2 = UGN2(2)
        if( UGN2(2) < 1.E30 ) YD2 = UGN2(2)*ZDIF
        call SPLINE(XS,YS,MN,YD1,YD2,Y2OUT)
        X = (Z-Z1)/ZDIF
        call SPLINT(XS,YS,Y2OUT,MN,X,Y)
        WPROF = Y
        RETURN
      end if

      end function WPROF

!=======================================================================

      SUBROUTINE GLBW5E(DAY,SEC,LAT,LONG,STL,F107A,F107,AP,PB,PC,WW)
      
      use HWM_CSW
      use HWM_HWMC
      use HWM_VPOLY2
      use HWM_LTCOMP
      use HWM_LGCOMP
      
      REAL LAT,LONG
      DIMENSION WB(2,15),WC(2,15),PB(1),PC(1),WW(2)
      DIMENSION AP(1)
      SAVE
      DATA DGTR/.017453/,SR/7.2722E-5/,HR/.2618/,DR/1.72142E-2/
      DATA NSW/14/,WB/30*0/,WC/30*0/
      DATA PB14/-1./,PB18/-1./
      DATA SW9/1./,LV/12/,MV/3/,NSV/3/,NGV/2/,PSET/3./
      G0(A) = (A-4.+(PB(26)-1.)*(A-4.+(EXP(-ABS(PB(25))*(A-4.))-1.)/
     * ABS(PB(25))))
C       CONFIRM PARAMETER SET
      if( PB(100) == 0) PB(100) = PSET
      if( PB(100) /= PSET ) then
        WRITE(6,900) PB(100),PC(100)
  900   FORMAT(1X,'WRONG PARAMETER SET FOR GLBW5E',3F10.1)
        STOP
      end if

      WB(1,1:NSW) = 0
      WB(2,1:NSW) = 0
      WC(1,1:NSW) = 0
      WC(2,1:NSW) = 0

      if( SWM(9) > 0) SW9 = 1.
      if( SWM(9) < 0) SW9 = -1.
      if( XVL /= LAT .or. LV > LVL .or. MV > MVL ) then
        SLAT = SIN(DGTR*LAT)
        CLAT = COS(DGTR*LAT)
        call VSPHR1(SLAT,CLAT,LV,MV,BT,BP,20)
        XVL = LAT
        LVL = LV
        MVL = MV
      end if
      if( TLL /= STL .or. NSV > NSVL)  then
        SSTL  =  SIN(HR*STL)
        CSTL  =  COS(HR*STL)
        S2STL  =  SIN(2.*HR*STL)
        C2STL  =  COS(2.*HR*STL)
        S3STL  =  SIN(3.*HR*STL)
        C3STL  =  COS(3.*HR*STL)
        TLL  =  STL
        NSVL = NSV
      end if
      if( DAY /= DAYL .or. PB(14) /= PB14 ) then
        CD14 = COS(DR*(DAY-PB(14)))
C        SD14 = SIN(DR*(DAY-PB(14)))
      end if
      if( DAY /= DAYL .or. PB(18) /= PB18 ) 
     $   CD18 = COS( 2.*DR*(DAY-PB(18)) )
      DAYL = DAY
      PB14 = PB(14)
      PB18 = PB(18)
      if( XLL /= LONG ) then
        SLONG = SIN(DGTR*LONG)
        CLONG = COS(DGTR*LONG)
        S2LONG = SIN(2.*DGTR*LONG)
        C2LONG = COS(2.*DGTR*LONG)
        XLL = LONG
        NGVL = 2
      end if
C       F10.7 EFFECT
      DF = F107-F107A
      DFA = F107A-150.
      DFC = DFA+PB(20)*DF
C       TIME INDEPENDENT
      F1B = 1.+PB(22)*DFC*SWC(1)
      if( WW(1) /= 9898 ) then
       WB(1,2) = (PB(2)*BT(3,1)+PB(3)*BT(5,1)+PB(23)*BT(7,1))*F1B       
      end if
      WB(2,2) = 0.
      F1C = 1.+PC(22)*DFC*SWC(1)
      WC(1,2) = 0.
      if( WW(2) /= 9898 ) then
       WC(2,2) = -(PC(2)*BT(2,1)+PC(3)*BT(4,1)+PC(23)*BT(6,1))*F1C
     $ -(PC(27)*BT(3,1)+PC(15)*BT(5,1)+PC(60)*BT(7,1)
     $ +PC(161)*BT(9,1)+PC(162)*BT(11,1)+PC(163)*BT(13,1))*F1C
      end if
C       SYMMETRICAL ANNUAL
C       SYMMETRICAL SEMIANNUAL
      if( WW(1) /= 9898 ) then
       WB(1,4) = (PB(17)*BT(3,1)+PB(31)*BT(5,1))*CD18
      end if
      WB(2,4) = 0
      WC(1,4) = 0
      if( WW(2) /= 9898 ) then
       WC(2,4) = -(PC(17)*BT(2,1)+PC(31)*BT(4,1))*CD18
      end if
C       ASYMMETRICAL ANNUAL
      F5B = 1.+PB(48)*DFC*SWC(1)
      if( WW(1) /= 9898 ) then
       WB(1,5) = (PB(10)*BT(2,1)+PB(11)*BT(4,1))*CD14*F5B
      end if
      WB(2,5) = 0
      F5C = 1.+PC(48)*DFC*SWC(1)
      WC(1,5) = 0
      if( WW(2) /= 9898 ) then
       WC(2,5) = -(PC(10)*BT(3,1)+PC(11)*BT(5,1))*CD14*F5C
      end if
C       ASYMMETRICAL SEMIANNUAL
C         none
C       DIURNAL      
      if( SWM(7) == 0) GOTO 200
      F7B = 1.+PB(50)*DFC*SWC(1)
      F75B = 1.+PB(83)*DFC*SWC(1)
      if( WW(1) /= 9898 ) then
       WB(1,7) = (PB(7)*BT(2,2)+PB(8)*BT(4,2)+PB(29)*BT(6,2)
     $ +PB(142)*BT(8,2)+PB(144)*BT(10,2)
     $  +PB(182)*BT(3,2)+PB(184)*BT(5,2)
     $  )*SSTL*F7B
     $ +(PB(13)*BT(3,2)+PB(146)*BT(5,2))
     $    *CD14*SSTL*F75B*SWC(5)
     $ +(PB(171)*BT(2,2)+PB(173)*BT(4,2))
     $    *CD18*SSTL*F75B*SWC(4)
     $ + (PB(4)*BT(2,2)+PB(5)*BT(4,2)+PB(28)*BT(6,2)
     $ +PB(141)*BT(8,2)+PB(143)*BT(10,2)
     $  +PB(181)*BT(3,2)+PB(183)*BT(5,2)
     $  )*CSTL*F7B
     $ +(PB(12)*BT(3,2)+PB(145)*BT(5,2))
     $      *CD14*CSTL*F75B*SWC(5)
     $ +(PB(170)*BT(2,2)+PB(172)*BT(4,2))
     $    *CD18*CSTL*F75B*SWC(4)
      end if
      if( WW(2) /= 9898 ) then
       WB(2,7) = -(PB(4)*BP(2,2)+PB(5)*BP(4,2)+PB(28)*BP(6,2)
     $   +PB(141)*BP(8,2)+PB(143)*BP(10,2)
     $   +PB(181)*BP(3,2)+PB(183)*BP(5,2)
     $  )*SSTL*F7B
     $ -(PB(12)*BP(3,2)+PB(145)*BP(5,2))
     $    *CD14*SSTL*F75B*SWC(5)
     $ -(PB(170)*BP(2,2)+PB(172)*BP(4,2))
     $    *CD18*SSTL*F75B*SWC(4)
     $ + (PB(7)*BP(2,2)+PB(8)*BP(4,2)+PB(29)*BP(6,2)
     $   +PB(142)*BP(8,2)+PB(144)*BP(10,2)
     $   +PB(182)*BP(3,2)+PB(184)*BP(5,2)
     $  )*CSTL*F7B
     $ +(PB(13)*BP(3,2)+PB(146)*BP(5,2))
     $    *CD14*CSTL*F75B*SWC(5)
     $ +(PB(171)*BP(2,2)+PB(173)*BP(4,2))
     $    *CD18*CSTL*F75B*SWC(4)
      end if
      F7C = 1.+PC(50)*DFC*SWC(1)
      F75C = 1.+PC(83)*DFC*SWC(1)
      if( WW(1) /= 9898 ) then
       WC(1,7) = -(PC(4)*BP(3,2)+PC(5)*BP(5,2)+PC(28)*BP(7,2)
     $   +PC(141)*BP(9,2)+PC(143)*BP(11,2)
     $   +PC(181)*BP(2,2)+PC(183)*BP(4,2)+PC(185)*BP(6,2)
     $   +PC(187)*BP(8,2)+PC(189)*BP(10,2)
     $  )*SSTL*F7C
     $ -(PC(12)*BP(2,2)+PC(145)*BP(4,2))
     $    *CD14*SSTL*F75C*SWC(5)
     $ -(PC(170)*BP(3,2)+PC(172)*BP(5,2))
     $    *CD18*SSTL*F75C*SWC(4)
     $ +(PC(7)*BP(3,2)+PC(8)*BP(5,2)+PC(29)*BP(7,2)
     $ +PC(142)*BP(9,2)+PC(144)*BP(11,2)
     $ +PC(182)*BP(2,2)+PC(184)*BP(4,2)+PC(186)*BP(6,2)
     $ +PC(188)*BP(8,2)+PC(190)*BP(10,2)
     $  )*CSTL*F7C
     $ +(PC(13)*BP(2,2)+PC(146)*BP(4,2))
     $     *CD14*CSTL*F75C*SWC(5)
     $ +(PC(171)*BP(3,2)+PC(173)*BP(5,2))
     $    *CD18*CSTL*F75C*SWC(4)
      end if
      if( WW(2) /= 9898 ) then
       WC(2,7) = -(PC(7)*BT(3,2)+PC(8)*BT(5,2)+PC(29)*BT(7,2)
     $ +PC(142)*BT(9,2)+PC(144)*BT(11,2)
     $ +PC(182)*BT(2,2)+PC(184)*BT(4,2)+PC(186)*BT(6,2)
     $ +PC(188)*BT(8,2)+PC(190)*BT(10,2)
     $  )*SSTL*F7C
     $ -(PC(13)*BT(2,2)+PC(146)*BT(4,2))
     $    *CD14*SSTL*F75C*SWC(5)
     $ -(PC(171)*BT(3,2)+PC(173)*BT(5,2))
     $    *CD18*SSTL*F75C*SWC(4)
     $ -(PC(4)*BT(3,2)+PC(5)*BT(5,2)+PC(28)*BT(7,2)
     $ +PC(141)*BT(9,2)+PC(143)*BT(11,2)
     $ +PC(181)*BT(2,2)+PC(183)*BT(4,2)+PC(185)*BT(6,2)
     $ +PC(187)*BT(8,2)+PC(189)*BT(10,2)
     $  )*CSTL*F7C
     $ -(PC(12)*BT(2,2)+PC(145)*BT(4,2))
     $    *CD14*CSTL*F75C*SWC(5)
     $ -(PC(170)*BT(3,2)+PC(172)*BT(5,2))
     $    *CD18*CSTL*F75C*SWC(4)
      end if
  200 CONTINUE
C       SEMIDIURNAL
      if( SWM(8) == 0) GOTO 210
      F8B = 1.+PB(90)*DFC*SWC(1)
      if( WW(1) /= 9898 ) then
       WB(1,8) = (PB(9)*BT(3,3)+PB(43)*BT(5,3)
     $   +PB(111)*BT(7,3)
     $   +(PB(34)*BT(4,3)+PB(148)*BT(6,3))*CD14*SWC(5)
     $   +(PB(134)*BT(3,3))*CD18*SWC(4) 
     $   +PB(152)*BT(4,3)+PB(154)*BT(6,3)+PB(156)*BT(8,3)
     $   +PB(158)*BT(10,3)
     $  )*S2STL*F8B
     $ +(PB(6)*BT(3,3)+PB(42)*BT(5,3)
     $   +PB(110)*BT(7,3)
     $   +(PB(24)*BT(4,3)+PB(147)*BT(6,3))*CD14*SWC(5)
     $   +(PB(135)*BT(3,3))*CD18*SWC(4)
     $   +PB(151)*BT(4,3)+PB(153)*BT(6,3)+PB(155)*BT(8,3)
     $   +PB(157)*BT(10,3)
     $  )*C2STL*F8B
      end if
      if( WW(2) /= 9898 ) then
       WB(2,8) = -(PB(6)*BP(3,3)+PB(42)*BP(5,3)
     $   +PB(110)*BP(7,3)
     $   +(PB(24)*BP(4,3)+PB(147)*BP(6,3))*CD14*SWC(5)
     $   +(PB(135)*BP(3,3))*CD18*SWC(4)
     $   +PB(151)*BP(4,3)+PB(153)*BP(6,3)+PB(155)*BP(8,3)
     $   +PB(157)*BP(10,3)
     $  )*S2STL*F8B
     $   + (PB(9)*BP(3,3)+PB(43)*BP(5,3)
     $   +PB(111)*BP(7,3)
     $   +(PB(34)*BP(4,3)+PB(148)*BP(6,3))*CD14*SWC(5)
     $   +(PB(134)*BP(3,3))*CD18*SWC(4)
     $   +PB(152)*BP(4,3)+PB(154)*BP(6,3)+PB(156)*BP(8,3)
     $   +PB(158)*BP(10,3)
     $  )*C2STL*F8B
      end if
      F8C = 1.+PC(90)*DFC*SWC(1)
      if( WW(1) /= 9898 ) then
       WC(1,8) = -(PC(6)*BP(4,3)+PC(42)*BP(6,3)
     $   +PC(110)*BP(8,3)
     $   +(PC(24)*BP(3,3)+PC(147)*BP(5,3))*CD14*SWC(5)
     $   +(PC(135)*BP(4,3))*CD18*SWC(4)
     $   +PC(151)*BP(3,3)+PC(153)*BP(5,3)+PC(155)*BP(7,3)
     $   +PC(157)*BP(9,3)
     $  )*S2STL*F8C
     $ +(PC(9)*BP(4,3)+PC(43)*BP(6,3)
     $   +PC(111)*BP(8,3)
     $   +(PC(34)*BP(3,3)+PC(148)*BP(5,3))*CD14*SWC(5)
     $   +(PC(134)*BP(4,3))*CD18*SWC(4)
     $   +PC(152)*BP(3,3)+PC(154)*BP(5,3)+PC(156)*BP(7,3)
     $   +PC(158)*BP(9,3)
     $  )*C2STL*F8C
      end if
      if( WW(2) /= 9898 ) then
       WC(2,8) = -(PC(9)*BT(4,3)+PC(43)*BT(6,3)
     $   +PC(111)*BT(8,3)
     $   +(PC(34)*BT(3,3)+PC(148)*BT(5,3))*CD14*SWC(5)
     $   +(PC(134)*BT(4,3))*CD18*SWC(4)
     $   +PC(152)*BT(3,3)+PC(154)*BT(5,3)+PC(156)*BT(7,3)
     $   +PC(158)*BT(9,3)
     $  )*S2STL*F8C
     $ - (PC(6)*BT(4,3)+PC(42)*BT(6,3)
     $   +PC(110)*BT(8,3)
     $   +(PC(24)*BT(3,3)+PC(147)*BT(5,3))*CD14*SWC(5)
     $   +(PC(135)*BT(4,3))*CD18*SWC(4)
     $   +PC(151)*BT(3,3)+PC(153)*BT(5,3)+PC(155)*BT(7,3)
     $   +PC(157)*BT(9,3)
     $  )*C2STL*F8C
      end if
  210 CONTINUE
C        TERDIURNAL
      if( SWM(14) == 0) GOTO 220
      F14B = 1.
      if( WW(1) /= 9898 ) then
       WB(1,14) = (PB(40)*BT(4,4)+PB(149)*BT(6,4)
     $   +PB(114)*BT(8,4)
     $   +(PB(94)*BT(5,4)+PB(47)*BT(7,4))*CD14*SWC(5)
     $  )*S3STL*F14B
     $ + (PB(41)*BT(4,4)+PB(150)*BT(6,4)
     $   +PB(115)*BT(8,4)
     $   +(PB(95)*BT(5,4)+PB(49)*BT(7,4))*CD14*SWC(5)
     $  )*C3STL*F14B
      end if
      if( WW(2) /= 9898 ) then
       WB(2,14) = -(PB(41)*BP(4,4)+PB(150)*BP(6,4)
     $   +PB(115)*BP(8,4)
     $   +(PB(95)*BP(5,4)+PB(49)*BP(7,4))*CD14*SWC(5)
     $  )*S3STL*F14B
     $ + (PB(40)*BP(4,4)+PB(149)*BP(6,4)
     $   +PB(114)*BP(8,4)
     $   +(PB(94)*BP(5,4)+PB(47)*BP(7,4))*CD14*SWC(5)
     $  )*C3STL*F14B
      end if
      F14C = 1.
      if( WW(1) /= 9898 ) then
       WC(1,14) = -(PC(41)*BP(5,4)+PC(150)*BP(7,4)
     $   +PC(115)*BP(9,4)
     $   +(PC(95)*BP(4,4)+PC(49)*BP(6,4))*CD14*SWC(5)
     $  )*S3STL*F14C
     $ + (PC(40)*BP(5,4)+PC(149)*BP(7,4)
     $   +PC(114)*BP(9,4)
     $   +(PC(94)*BP(4,4)+PC(47)*BP(6,4))*CD14*SWC(5)
     $  )*C3STL*F14C
      end if
      if( WW(2) /= 9898 ) then
       WC(2,14) = -(PC(40)*BT(5,4)+PC(149)*BT(7,4)
     $   +PC(114)*BT(9,4)
     $   +(PC(94)*BT(4,4)+PC(47)*BT(6,4))*CD14*SWC(5)
     $  )*S3STL*F14C
     $ - (PC(41)*BT(5,4)+PC(150)*BT(7,4)
     $   +PC(115)*BT(9,4)
     $   +(PC(95)*BT(4,4)+PC(49)*BT(6,4))*CD14*SWC(5)
     $  )*C3STL*F14C
      end if
  220 CONTINUE
C        MAGNETIC ACTIVITY
      if( SWM(9) == 0.) GOTO 40
      if( SW9 == -1.) GOTO 30
C           daily AP
      APD = AP(1)-4.
      APDF = (APD+(PB(45)-1.)*(APD+(EXP(-PB(44)*APD)-1.)/PB(44)))
C      APDFC = (APD+(PC(45)-1.)*(APD+(EXP(-PC(44)*APD)-1.)/PC(44)))
      APDFC = APDF
      if( APD == 0.) GOTO 40
      if( WW(1) /= 9898 ) then
       WB(1,9) = (PB(46)*BT(3,1)+PB(35)*BT(5,1)+PB(33)*BT(7,1))*APDF
     $  +(PB(175)*BT(3,3)+PB(177)*BT(5,3))*S2STL*APDF
     $  +(PB(174)*BT(3,3)+PB(176)*BT(5,3))*C2STL*APDF
      end if
      if( WW(2) /= 9898 ) then
       WB(2,9) = 0                                              
     $  -(PB(174)*BP(3,3)+PB(176)*BP(5,3))*S2STL*APDF
     $  +(PB(175)*BP(3,3)+PB(177)*BP(5,3))*C2STL*APDF
      end if
      if( WW(1) /= 9898 ) then
       WC(1,9) = SWC(7)*WC(1,7)*PC(122)*APDFC
     $  -(PC(174)*BP(4,3)+PC(176)*BP(6,3))*S2STL*APDFC
     $  +(PC(175)*BP(4,3)+PC(177)*BP(6,3))*C2STL*APDFC
      end if
      if( WW(2) /= 9898 ) then
       WC(2,9) = -(PC(46)*BT(2,1)+PC(35)*BT(4,1)+PC(33)*BT(6,1))*APDFC
     $ +SWC(7)*WC(2,7)*PC(122)*APDFC
     $ -(PC(175)*BT(4,3)+PC(177)*BT(6,3))*S2STL*APDFC
     $ -(PC(174)*BT(4,3)+PC(176)*BT(6,3))*C2STL*APDFC
      end if
      GO TO 40
   30 CONTINUE
      if( PB(25) < 1.E-4) PB(25) = 1.E-4
      APT = G0(AP(2))
      if( APT == 0) GOTO 40
      if( WW(1) /= 9898 ) then
       WB(1,9) = (PB(97)*BT(3,1)+PB(55)*BT(5,1)+PB(51)*BT(7,1))*APT
     $  +(PB(160)*BT(3,3)+PB(179)*BT(5,3))*S2STL*APT
     $  +(PB(159)*BT(3,3)+PB(178)*BT(5,3))*C2STL*APT
      end if
      if( WW(2) /= 9898 ) then
       WB(2,9) = 0
     $  -(PB(159)*BP(3,3)+PB(178)*BP(5,3))*S2STL*APT
     $  +(PB(160)*BP(3,3)+PB(179)*BP(5,3))*C2STL*APT
      end if
      if( WW(1) /= 9898 ) then
       WC(1,9) = SWC(7)*WC(1,7)*PC(129)*APT
     $  -(PC(159)*BP(4,3)+PC(178)*BP(6,3))*S2STL*APT
     $  +(PC(160)*BP(4,3)+PC(179)*BP(6,3))*C2STL*APT
      end if
      if( WW(2) /= 9898 ) then
      WC(2,9) = -(PC(97)*BT(2,1)+PC(55)*BT(4,1)+PC(51)*BT(6,1))*APT
     $ +SWC(7)*WC(2,7)*PC(129)*APT
     $ -(PC(160)*BT(4,3)+PC(179)*BT(6,3))*S2STL*APT
     $ -(PC(159)*BT(4,3)+PC(178)*BT(6,3))*C2STL*APT
      end if
  40  CONTINUE
      if( SWM(10) == 0) GOTO 49
C        LONGITUDINAL
      DBASY1 = 1.+PB(199)*SLAT
      DBASY2 = 1.+PB(200)*SLAT
      F11B = 1.+PB(81)*DFC*SWC(1)
      if( SWM(11) == 0) GOTO 230
      if( WW(1) /= 9898 ) then
       WB(1,11) = (PB(91)*BT(3,2)+PB(92)*BT(5,2)+PB(93)*BT(7,2))
     $  *SLONG*DBASY1*F11B
     $ + (PB(65)*BT(3,2)+PB(66)*BT(5,2)+PB(67)*BT(7,2))
     $  *CLONG*DBASY1*F11B
     $  +(PB(191)*BT(3,3)+PB(193)*BT(5,3)+PB(195)*BT(7,3)
     $   +PB(197)*BT(9,3)
     $  )*S2LONG*DBASY2*F11B
     $ + (PB(192)*BT(3,3)+PB(194)*BT(5,3)+PB(196)*BT(7,3)
     $    +PB(198)*BT(9,3)
     $  )*C2LONG*DBASY2*F11B
      end if
      if( WW(2) /= 9898 ) then
       WB(2,11) = -(PB(65)*BP(3,2)+PB(66)*BP(5,2)+PB(67)*BP(7,2))
     $  *SLONG*DBASY1*F11B
     $ + (PB(91)*BP(3,2)+PB(92)*BP(5,2)+PB(93)*BP(7,2))
     $  *CLONG*DBASY1*F11B
     $ -(PB(192)*BP(3,3)+PB(194)*BP(5,3)+PB(196)*BP(7,3)
     $   +PB(198)*BP(9,3)
     $  )*S2LONG*DBASY2*F11B
     $ + (PB(191)*BP(3,3)+PB(193)*BP(5,3)+PB(195)*BP(7,3)
     $    +PB(197)*BP(9,3)
     $  )*C2LONG*DBASY2*F11B
      end if
      DCASY1 = 1.+PC(199)*SLAT
      DCASY2 = 1.+PC(200)*SLAT
      F11C = 1.+PC(81)*DFC*SWC(1)
      if( WW(1) /= 9898 ) then
       WC(1,11) = -(PC(65)*BP(2,2)+PC(66)*BP(4,2)+PC(67)*BP(6,2)
     $ +PC(73)*BP(8,2)+PC(74)*BP(10,2)
     $  )*SLONG*DCASY1*F11C
     $ + (PC(91)*BP(2,2)+PC(92)*BP(4,2)+PC(93)*BP(6,2)
     $ +PC(87)*BP(8,2)+PC(88)*BP(10,2)
     $  )*CLONG*DCASY1*F11C
     $  -(PC(192)*BP(4,3)+PC(194)*BP(6,3)+PC(196)*BP(8,3)
     $ +PC(198)*BP(10,3)
     $  )*S2LONG*DCASY2*F11C
     $ + (PC(191)*BP(4,3)+PC(193)*BP(6,3)+PC(195)*BP(8,3)
     $ +PC(197)*BP(10,3)
     $  )*C2LONG*DCASY2*F11C
      end if
      if( WW(2) /= 9898 ) then
       WC(2,11) = -(PC(91)*BT(2,2)+PC(92)*BT(4,2)+PC(93)*BT(6,2)
     $ +PC(87)*BT(8,2)+PC(88)*BT(10,2)
     $  )*SLONG*DCASY1*F11C
     $ - (PC(65)*BT(2,2)+PC(66)*BT(4,2)+PC(67)*BT(6,2)
     $ +PC(73)*BT(8,2)+PC(74)*BT(10,2)
     $  )*CLONG*DCASY1*F11C
     $  -(PC(191)*BT(4,3)+PC(193)*BT(6,3)+PC(195)*BT(8,3)
     $ +PC(197)*BT(10,3)
     $  )*S2LONG*DCASY2*F11C
     $ - (PC(192)*BT(4,3)+PC(194)*BT(6,3)+PC(196)*BT(8,3)
     $ +PC(198)*BT(10,3)
     $  )*C2LONG*DCASY2*F11C
      end if
  230 CONTINUE
C       UT & MIXED UT/LONG
      UTBASY = 1.
      F12B = 1.+PB(82)*DFC*SWC(1)
      if( SWM(12) == 0) GOTO 240
      if( WW(1) /= 9898 ) then
       WB(1,12) = (PB(69)*BT(2,1)+PB(70)*BT(4,1)+PB(71)*BT(6,1)
     $ +PB(116)*BT(8,1)+PB(117)*BT(10,1)+PB(118)*BT(12,1)
     $  )*COS(SR*(SEC-PB(72)))*UTBASY*F12B
     $ + (PB(77)*BT(4,3)+PB(78)*BT(6,3)+PB(79)*BT(8,3))
     $  *COS(SR*(SEC-PB(80))+2.*DGTR*LONG)*UTBASY*F12B*SWC(11)
      end if
      if( WW(2) /= 9898 ) then
       WB(2,12) = (PB(77)*BP(4,3)+PB(78)*BP(6,3)+PB(79)*BP(8,3))
     $  *COS(SR*(SEC-PB(80)+21600.)+2.*DGTR*LONG)
     $    *UTBASY*F12B*SWC(11)
      end if
      UTCASY = 1.
      F12C = 1.+PC(82)*DFC*SWC(1)
      if( WW(1) /= 9898 ) then
       WC(1,12) = (PC(77)*BP(3,3)+PC(78)*BP(5,3)+PC(79)*BP(7,3)
     $ +PC(165)*BP(9,3)+PC(166)*BP(11,3)+PC(167)*BP(13,3)
     $  )*COS(SR*(SEC-PC(80))+2.*DGTR*LONG)*UTCASY*F12C*SWC(11)
      end if
      if( WW(2) /= 9898 ) then
       WC(2,12) = -(PC(69)*BT(3,1)+PC(70)*BT(5,1)+PC(71)*BT(7,1)
     $ +PC(116)*BT(9,1)+PC(117)*BT(11,1)+PC(118)*BT(13,1)
     $  )*COS(SR*(SEC-PC(72)))*UTCASY*F12C
     $ + (PC(77)*BT(3,3)+PC(78)*BT(5,3)+PC(79)*BT(7,3)
     $ +PC(165)*BT(9,3)+PC(166)*BT(11,3)+PC(167)*BT(13,3)
     $  )*COS(SR*(SEC-PC(80)+21600.)+2.*DGTR*LONG)
     $   *UTCASY*F12C*SWC(11)
      end if
  240 CONTINUE
C       MIXED LONG,UT,AP
      if( SWM(13) == 0) GOTO 48
      if( SW9 == -1.) GO TO 45
      if( APD == 0) GOTO 48
      if( WW(1) /= 9898 ) then
       WB(1,13) = 
     $ (PB(61)*BT(3,2)+PB(62)*BT(5,2)+PB(63)*BT(7,2))
     $  *COS(DGTR*(LONG-PB(64)))*APDF*SWC(11)+
     $  (PB(84)*BT(2,1)+PB(85)*BT(4,1)+PB(86)*BT(6,1))
     $  *COS(SR*(SEC-PB(76)))*APDF*SWC(12)
      end if
      if( WW(2) /= 9898 ) then
       WB(2,13) = (PB(61)*BP(3,2)+PB(62)*BP(5,2)+PB(63)*BP(7,2))
     $  *COS(DGTR*(LONG-PB(64)+90.))*APDF*SWC(11)
      end if
      if( WW(1) /= 9898 ) then 
       WC(1,13) = SWC(11)*WC(1,11)*PC(61)*APDFC
     $ +SWC(12)*WC(1,12)*PC(84)*APDFC
      end if
      if( WW(2) /= 9898 ) then
       WC(2,13) = SWC(11)*WC(2,11)*PC(61)*APDFC
     $ +SWC(12)*WC(2,12)*PC(84)*APDFC
      end if
      GOTO 48
   45 CONTINUE
      if( APT == 0) GOTO 48
      if( WW(1) /= 9898 ) then
       WB(1,13) = 
     $  (PB(53)*BT(3,2)+PB(99)*BT(5,2)+PB(68)*BT(7,2))
     $  *COS(DGTR*(LONG-PB(98)))*APT*SWC(11)+
     $  (PB(56)*BT(2,1)+PB(57)*BT(4,1)+PB(58)*BT(6,1))
     $  *COS(SR*(SEC-PB(59)))*APT*SWC(12)
      end if
      if( WW(2) /= 9898 ) then
       WB(2,13) = (PB(53)*BP(3,2)+PB(99)*BP(5,2)+PB(68)*BP(7,2))
     $  *COS(DGTR*(LONG-PB(98)+90.))*APT*SWC(11)
      end if
      if( WW(1) /= 9898 ) then
       WC(1,13) = SWC(11)*WC(1,11)*PC(53)*APT
     $ +SWC(12)*WC(1,12)*PC(56)*APT
      end if
      if( WW(2) /= 9898 ) then
       WC(2,13) = SWC(11)*WC(2,11)*PC(53)*APT
     $ +SWC(12)*WC(2,12)*PC(56)*APT
      end if
   48 CONTINUE
   49 CONTINUE
      WBT(1) = 0             
      WBT(2) = 0
      WCT(1) = 0
      WCT(2) = 0                                 
C       SUM WINDS AND CHANGE MERIDIONAL SIGN TO + NORTH
      do 50 K = 1,NSW
        WBT(1) = WBT(1)-ABS(SWM(K))*WB(1,K)
        WCT(1) = WCT(1)-ABS(SWM(K))*WC(1,K)
        WBT(2) = WBT(2)+ABS(SWM(K))*WB(2,K)
        WCT(2) = WCT(2)+ABS(SWM(K))*WC(2,K)
   50 CONTINUE
      if( WW(1) /= 9898) WW(1) = WBT(1)*SWM(24)+WCT(1)*SWM(25)
      if( WW(2) /= 9898) WW(2) = WBT(2)*SWM(24)+WCT(2)*SWM(25)

      end subroutine GLBW5E

!=======================================================================

      subroutine GLBW5M( DAY, SEC,LAT,LONG,STL,F107A,F107,AP,PB,PC,WW )

      use HWM_CSW
      use HWM_HWMC
      use HWM_VPOLY2
      use HWM_LTCOMP
      use HWM_LGCOMP

      real, intent(in) :: DAY, LAT, LONG
      DIMENSION WB(2,15),WC(2,15),PB(1),PC(1),WW(2)
      DIMENSION AP(1)
      SAVE
      DATA DGTR/.017453/,SR/7.2722E-5/,HR/.2618/,DR/1.72142E-2/
      DATA PB14/-1./,PB18/-1./
      DATA NSW/14/,WB/30*0/,WC/30*0/
      DATA SW9/1./,LV/10/,MV/2/,NSV/2/,PSET/4./
      G0(A) = (A-4.+(PB(26)-1.)*(A-4.+(EXP(-ABS(PB(25))*(A-4.))-1.)/
     * ABS(PB(25))))
C       CONFIRM PARAMETER SET
      if( PB(100) == 0) PB(100) = PSET
      if( PB(100) /= PSET ) then
        WRITE(6,900) PSET,PB(100),PC(100)
  900   FORMAT(1X,'WRONG PARAMETER SET FOR GLBW5M',3F10.1)
        STOP
      end if

      WB(1,1:NSW) = 0
      WB(2,1:NSW) = 0
      WC(1,1:NSW) = 0
      WC(2,1:NSW) = 0
      if( SWM(9) > 0) SW9 = 1.
      if( SWM(9) < 0) SW9 = -1.
      if( XVL /= LAT .or. LV > LVL .or. MV > MVL ) then
        SLAT = SIN(DGTR*LAT)
        CLAT = COS(DGTR*LAT)
        call VSPHR1(SLAT,CLAT,LV,MV,BT,BP,20)
        XVL = LAT
        LVL = LV
        MVL = MV
      end if
      if( TLL /= STL .or. NSV > NSVL)  then
        SSTL  =  SIN(HR*STL)
        CSTL  =  COS(HR*STL)
        S2STL  =  SIN(2.*HR*STL)
        C2STL  =  COS(2.*HR*STL)
        TLL  =  STL
        NSVL = NSV
      end if
      if( DAY /= DAYL .or. PB(14) /= PB14 ) CD14 = COS(DR*(DAY-PB(14))) 
      if( DAY /= DAYL .or. PB(18) /= PB18 ) 
     $   CD18 = COS( 2.*DR*(DAY-PB(18)) )
      if( DAY /= DAYL .or. PB(19) /= PB19 ) 
     $   CD19B = COS( 2.*DR*(DAY-PB(19)) )
      DAYL = DAY
      PB14 = PB(14)
      PB18 = PB(18)
      PB19 = PB(19)
C       F10.7 EFFECT
      DF = F107-F107A
      DFA = F107A-150.
      DFC = DFA+PB(20)*DF
C       TIME INDEPENDENT
      F1B = 1.
      if( WW(1) /= 9898 ) then
       WB(1,2) = (PB(2)*BT(3,1)+PB(3)*BT(5,1)+PB(23)*BT(7,1))*F1B
      end if
      WB(2,2) = 0.
      F1C = 1.
      WC(1,2) = 0.
      if( WW(2) /= 9898 ) then
       WC(2,2) = -(PC(2)*BT(2,1)+PC(3)*BT(4,1)+PC(23)*BT(6,1))*F1C
     $ -(PC(27)*BT(3,1)+PC(15)*BT(5,1)+PC(60)*BT(7,1))*F1C
      end if
C       SYMMETRICAL ANNUAL
C       SYMMETRICAL SEMIANNUAL
      if( WW(1) /= 9898 ) then
       WB(1,4) = (PB(17)*BT(3,1)+PB(31)*BT(5,1))*CD18
      end if
      WB(2,4) = 0
      WC(1,4) = 0
      if( WW(2) /= 9898 ) then
       WC(2,4) = -(PC(17)*BT(2,1)+PC(31)*BT(4,1))*CD18
      end if
C       ASYMMETRICAL ANNUAL
      F5B = 1.
      if( WW(1) /= 9898 ) then
       WB(1,5) = (PB(10)*BT(2,1)+PB(11)*BT(4,1))*CD14*F5B
      end if
      WB(2,5) = 0
      F5C = 1.
      WC(1,5) = 0
      if( WW(2) /= 9898 ) then
       WC(2,5) = -(PC(10)*BT(3,1)+PC(11)*BT(5,1))*CD14*F5C
      end if
C       ASYMMETRICAL SEMIANNUAL
C       DIURNAL      
      if( SWM(7) == 0) GOTO 200
      F7B = 1.
      F75B = 1.
      if( WW(1) /= 9898 ) then
       WB(1,7) = (PB(7)*BT(2,2)+PB(8)*BT(4,2)+PB(29)*BT(6,2)
     $         +PB(89)*BT(3,2)
     $  )*SSTL*F7B
     $ +(PB(13)*BT(3,2)+PB(146)*BT(5,2))
     $    *CD14*SSTL*F75B*SWC(5)
     $ + (PB(4)*BT(2,2)+PB(5)*BT(4,2)+PB(28)*BT(6,2)
     $         +PB(88)*BT(3,2)
     $  )*CSTL*F7B
     $ +(PB(12)*BT(3,2)+PB(145)*BT(5,2))
     $      *CD14*CSTL*F75B*SWC(5)
      end if
      if( WW(2) /= 9898 ) then
       WB(2,7) = -(PB(4)*BP(2,2)+PB(5)*BP(4,2)+PB(28)*BP(6,2)
     $         +PB(88)*BP(3,2)
     $  )*SSTL*F7B
     $ -(PB(12)*BP(3,2)+PB(145)*BP(5,2))
     $    *CD14*SSTL*F75B*SWC(5)
     $ + (PB(7)*BP(2,2)+PB(8)*BP(4,2)+PB(29)*BP(6,2)
     $         +PB(89)*BP(3,2)
     $  )*CSTL*F7B
     $ +(PB(13)*BP(3,2)+PB(146)*BP(5,2))
     $    *CD14*CSTL*F75B*SWC(5)
      end if
      F7C = 1.
      F75C = 1.
      if( WW(1) /= 9898 ) then
       WC(1,7) = -(PC(4)*BP(3,2)+PC(5)*BP(5,2)+PC(28)*BP(7,2)
     $         +PC(88)*BP(2,2)
     $   +PC(141)*BP(9,2)+PC(143)*BP(11,2)
     $  )*SSTL*F7C
     $ -(PC(12)*BP(2,2)+PC(145)*BP(4,2))
     $    *CD14*SSTL
     $   *F75C*SWC(5)
     $ +(PC(7)*BP(3,2)+PC(8)*BP(5,2)+PC(29)*BP(7,2)
     $         +PC(89)*BP(2,2)
     $ +PC(142)*BP(9,2)+PC(144)*BP(11,2)
     $  )*CSTL*F7C
     $ +(PC(13)*BP(2,2)+PC(146)*BP(4,2))
     $     *CD14*CSTL
     $   *F75C*SWC(5)
      end if
      if( WW(2) /= 9898 ) then
       WC(2,7) = -(PC(7)*BT(3,2)+PC(8)*BT(5,2)+PC(29)*BT(7,2)
     $         +PC(89)*BT(2,2)
     $ +PC(142)*BT(9,2)+PC(144)*BT(11,2)
     $  )*SSTL*F7C
     $ -(PC(13)*BT(2,2)+PC(146)*BT(4,2))
     $    *CD14*SSTL
     $   *F75C*SWC(5)
     $ -(PC(4)*BT(3,2)+PC(5)*BT(5,2)+PC(28)*BT(7,2)
     $         +PC(88)*BT(2,2)
     $ +PC(141)*BT(9,2)+PC(143)*BT(11,2)
     $  )*CSTL*F7C
     $ -(PC(12)*BT(2,2)+PC(145)*BT(4,2))
     $    *CD14*CSTL
     $   *F75C*SWC(5)
      end if
  200 CONTINUE
C       SEMIDIURNAL
      if( SWM(8) == 0) GOTO 210
      F8B = 1.+PB(90)*DFC*SWC(1)
      if( WW(1) /= 9898 ) then
       WB(1,8) = (PB(9)*BT(3,3)+PB(43)*BT(5,3)+PB(111)*BT(7,3)
     $         +PB(98)*BT(4,3)
     $   +(PB(34)*BT(4,3)+PB(148)*BT(6,3))*CD14*SWC(5)
     $   +(PB(37)*BT(4,3))*CD19B*SWC(6)
     $  )*S2STL*F8B
     $ +(PB(6)*BT(3,3)+PB(42)*BT(5,3)+PB(110)*BT(7,3)
     $         +PB(96)*BT(4,3)
     $   +(PB(24)*BT(4,3)+PB(147)*BT(6,3))*CD14*SWC(5)
     $   +(PB(36)*BT(4,3))*CD19B*SWC(6)
     $  )*C2STL*F8B
      end if
      if( WW(2) /= 9898 ) then
       WB(2,8) = -(PB(6)*BP(3,3)+PB(42)*BP(5,3)+PB(110)*BP(7,3)
     $          +PB(96)*BP(4,3)
     $   +(PB(24)*BP(4,3)+PB(147)*BP(6,3))*CD14*SWC(5)
     $   +(PB(36)*BP(4,3))*CD19B*SWC(6)
     $  )*S2STL*F8B
     $   + (PB(9)*BP(3,3)+PB(43)*BP(5,3)+PB(111)*BP(7,3)
     $          +PB(98)*BP(4,3)
     $   +(PB(34)*BP(4,3)+PB(148)*BP(6,3))*CD14*SWC(5)
     $   +(PB(37)*BP(4,3))*CD19B*SWC(6)
     $  )*C2STL*F8B
      end if
      F8C = 1.+PC(90)*DFC*SWC(1)
      if( WW(1) /= 9898 ) then
       WC(1,8) = -(PC(6)*BP(4,3)+PC(42)*BP(6,3)+PC(110)*BP(8,3)
     $          +PC(96)*BP(3,3)
     $   +(PC(24)*BP(3,3)+PC(147)*BP(5,3))*CD14*SWC(5)
     $   +(PC(36)*BP(3,3))*CD19B*SWC(6)
     $  )*S2STL*F8C
     $ +(PC(9)*BP(4,3)+PC(43)*BP(6,3)+PC(111)*BP(8,3)
     $          +PC(98)*BP(3,3)
     $   +(PC(34)*BP(3,3)+PC(148)*BP(5,3))*CD14*SWC(5)
     $   +(PC(37)*BP(3,3))*CD19B*SWC(6)
     $  )*C2STL*F8C
      end if
      if( WW(2) /= 9898 ) then
       WC(2,8) = -(PC(9)*BT(4,3)+PC(43)*BT(6,3)+PC(111)*BT(8,3)
     $          +PC(98)*BT(3,3)
     $   +(PC(34)*BT(3,3)+PC(148)*BT(5,3))*CD14*SWC(5)
     $   +(PC(37)*BT(3,3))*CD19B*SWC(6)
     $  )*S2STL*F8C
     $ - (PC(6)*BT(4,3)+PC(42)*BT(6,3)
     $          +PC(96)*BT(3,3)
     $   +PC(110)*BT(8,3)
     $   +(PC(24)*BT(3,3)+PC(147)*BT(5,3))*CD14*SWC(5)
     $   +(PC(36)*BT(3,3))*CD19B*SWC(6)
     $  )*C2STL*F8C
      end if
  210 CONTINUE
C        TERDIURNAL
C        MAGNETIC ACTIVITY
      if( SWM(9) == 0) GOTO 40
      if( SW9 == -1.) GOTO 30
C           daily AP
      APD = AP(1)-4.
      APDF = (APD+(PB(45)-1.)*(APD+(EXP(-PB(44)*APD)-1.)/PB(44)))
C      APDFC = (APD+(PC(45)-1.)*(APD+(EXP(-PC(44)*APD)-1.)/PC(44)))
      APDFC = APDF
      if( APD == 0) GOTO 40
      if( WW(1) /= 9898 ) then
       WB(1,9) = (PB(46)*BT(3,1)+PB(35)*BT(5,1))*APDF
     $    +(PB(122)*BT(2,2)+PB(123)*BT(4,2)+PB(124)*BT(6,2)
     $       )*COS(HR*(STL-PB(125)))*APDF*SWC(7)
      end if
      if( WW(2) /= 9898 ) then
       WB(2,9) = 
     $   (PB(122)*BP(2,2)+PB(123)*BP(4,2)+PB(124)*BP(6,2)
     $     )*COS(HR*(STL-PB(125)+6.))*APDF*SWC(7)
      end if
      if( WW(1) /= 9898 ) then
       WC(1,9) = 
     $   (PC(122)*BP(3,2)+PC(123)*BP(5,2)+PC(124)*BP(7,2)
     $       )*COS(HR*(STL-PC(125)))*APDFC*SWC(7)
      end if
      if( WW(2) /= 9898 ) then
       WC(2,9) = -(PC(46)*BT(2,1)+PC(35)*BT(4,1))*APDFC
     $  +(PC(122)*BT(3,2)+PC(123)*BT(5,2)+PC(124)*BT(7,2)
     $       )*COS(HR*(STL-PC(125)+6.))*APDFC*SWC(7)
      end if
      GO TO 40
   30 CONTINUE
      if( PB(25) < 1.E-4) PB(25) = 1.E-4
      APT = G0(AP(2))
      if( APT == 0) GOTO 40
      if( WW(1) /= 9898 ) then
       WB(1,9) = (PB(97)*BT(3,1)+PB(55)*BT(5,1))*APT
     $    +(PB(129)*BT(2,2)+PB(130)*BT(4,2)+PB(131)*BT(6,2)
     $       )*COS(HR*(STL-PB(132)))*APT*SWC(7)
      end if
      if( WW(2) /= 9898 ) then
       WB(2,9) = 
     $   (PB(129)*BP(2,2)+PB(130)*BP(4,2)+PB(131)*BP(6,2)
     $     )*COS(HR*(STL-PB(132)+6.))*APT*SWC(7)
      end if
      if( WW(1) /= 9898 ) then
       WC(1,9) = 
     $   (PC(129)*BP(3,2)+PC(130)*BP(5,2)+PC(131)*BP(7,2)
     $       )*COS(HR*(STL-PC(132)))*APT*SWC(7)
      end if
      if( WW(2) /= 9898 ) then
       WC(2,9) = -(PC(97)*BT(2,1)+PC(55)*BT(4,1))*APT
     $  +(PC(129)*BT(3,2)+PC(130)*BT(5,2)+PC(131)*BT(7,2)
     $       )*COS(HR*(STL-PC(132)+6.))*APT*SWC(7)
      end if
  40  CONTINUE
      WBT(1) = 0
      WBT(2) = 0
      WCT(1) = 0
      WCT(2) = 0
C       SUM WINDS AND CHANGE MERIDIONAL SIGN TO + NORTH
      do 50 K = 1,NSW
        WBT(1) = WBT(1)-ABS(SWM(K))*WB(1,K)
        WCT(1) = WCT(1)-ABS(SWM(K))*WC(1,K)
        WBT(2) = WBT(2)+ABS(SWM(K))*WB(2,K)
        WCT(2) = WCT(2)+ABS(SWM(K))*WC(2,K)
   50 CONTINUE
      if( WW(1) /= 9898) WW(1) = WBT(1)*SWM(24)+WCT(1)*SWM(25)
      if( WW(2) /= 9898) WW(2) = WBT(2)*SWM(24)+WCT(2)*SWM(25)

      end subroutine GLBW5M

!=======================================================================

      subroutine GLBW5S( DAY, LAT, LONG, STL, PB, PC, WW )

      use HWM_CSW
      use HWM_HWMC
      use HWM_VPOLY2
      use HWM_LTCOMP
      use HWM_LGCOMP

      real, intent(in) :: DAY, LAT, LONG
      DIMENSION WB(2,15),WC(2,15),PB(1),PC(1),WW(2)
      SAVE
      DATA DGTR/.017453/,SR/7.2722E-5/,HR/.2618/,DR/1.72142E-2/
      DATA PB14/-1./,PB18/-1./,PC14/-1./,PC18/-1./,PSET/5./
      DATA NSW/14/,WB/30*0/,WC/30*0/
C       CONFIRM PARAMETER SET
      if( PB(100) == 0) PB(100) = PSET
      if( PB(100) /= PSET ) then
        WRITE(6,900) PSET,PB(100),PC(100)
  900   FORMAT(1X,'WRONG PARAMETER SET FOR GLBW5S',3F10.1)
        STOP
      end if
C
      WB(1,1:NSW) = 0
      WB(2,1:NSW) = 0
      WC(1,1:NSW) = 0
      WC(2,1:NSW) = 0
 
      LV = 7
      MV = 2
      if( XVL /= LAT .or. LV > LVL .or. MV > MVL ) then
        SLAT = SIN(DGTR*LAT)
        CLAT = COS(DGTR*LAT)
        call VSPHR1(SLAT,CLAT,LV,MV,BT,BP,20)
        PLG10 = SLAT
        PLG30 = (5.*SLAT*SLAT-3.)*SLAT/2.
        XVL = LAT
        LVL = LV
        MVL = MV
      end if
C
      NSV = 2
      if( TLL /= STL .or. NSV > NSVL)  then
        SSTL  =  SIN(HR*STL)
        CSTL  =  COS(HR*STL)
        S2STL  =  SIN(2.*HR*STL)
        C2STL  =  COS(2.*HR*STL)
        TLL  =  STL
        NSVL = NSV
      end if
      if( DAY /= DAYL .or. PB(14) /= PB14 ) 
     $   CD14B = COS(DR*(DAY-PB(14)))
      if( DAY /= DAYL .or. PC(14) /= PC14 ) 
     $   CD14C = COS(DR*(DAY-PC(14)))
      if( DAY /= DAYL .or. PB(18) /= PB18 ) 
     $   CD18B = COS(2.*DR*(DAY-PB(18)))
      if( DAY /= DAYL .or. PC(18) /= PC18 ) 
     $   CD18C = COS(2.*DR*(DAY-PC(18)))
      if( DAY /= DAYL .or. PB(19) /= PB19 ) 
     $   CD19B = COS(2.*DR*(DAY-PB(19)))
      if( DAY /= DAYL .or. PB(25) /= PB25 ) 
     $   CD25B = COS(DR*(DAY-PB(25)))
      if( DAY /= DAYL .or. PB(26) /= PB26 ) 
     $   CD26B = COS(DR*(DAY-PB(26)))
      if( DAY /= DAYL .or. PC(32) /= PC32 ) 
     $   CD32C = COS(DR*(DAY-PC(32)))
      if( DAY /= DAYL .or. PC(39) /= PC39 ) 
     $   CD39C = COS(2.*DR*(DAY-PC(39)))
      if( DAY /= DAYL .or. PC(64) /= PC64 ) 
     $   CD64C = COS(DR*(DAY-PC(64)))
      if( DAY /= DAYL .or. PC(87) /= PC87 ) 
     $   CD87C = COS(2.*DR*(DAY-PC(87)))
      DAYL = DAY           
      PB14 = PB(14)
      PC14 = PC(14)
      PB18 = PB(18)
      PC18 = PC(18)
      PB19 = PB(19)
      PB25 = PB(25)
      PC25 = PC(25)
      PB26 = PB(26)
      PC26 = PC(26)
      PC32 = PC(32)
      PC39 = PC(39)
      PC64 = PC(64)
      PC87 = PC(87)
C
      NGV = 1
      if( XLL /= LONG .or. NGV > NGVL ) then
        SLONG = SIN(DGTR*LONG)
        CLONG = COS(DGTR*LONG)
        XLL = LONG
        NGVL = NGV
      end if
C       TIME INDEPENDENT
      F1B = 1.
      if( WW(1) /= 9898 ) then
       WB(1,2) = (PB(2)*BT(3,1)+PB(3)*BT(5,1)+PB(23)*BT(7,1))*F1B
      end if
      WB(2,2) = 0.
      F1C = 1.
      WC(1,2) = 0.
      if( WW(2) /= 9898 ) then
       WC(2,2) = -(PC(2)*BT(2,1)+PC(3)*BT(4,1)+PC(23)*BT(6,1))*F1C
     $ -(PC(27)*BT(3,1)+PC(15)*BT(5,1)+PC(60)*BT(7,1))*F1C
      end if
C       SYMMETRICAL ANNUAL
      if( WW(2) /= 9898 ) then
       WC(2,3) = -(PC(48)*BT(2,1)+PC(30)*BT(4,1))*CD32C
      end if
C       SYMMETRICAL SEMIANNUAL
      if( WW(1) /= 9898 ) then
       WB(1,4) = (PB(17)*BT(3,1)+PB(31)*BT(5,1))*CD18B
      end if
      WB(2,4) = 0
      WC(1,4) = 0
      if( WW(2) /= 9898 ) then
       WC(2,4) = -(PC(17)*BT(2,1)+PC(31)*BT(4,1)+PC(50)*BT(6,1))*CD18C  
      end if
C       ASYMMETRICAL ANNUAL
      F5B = 1.
      if( WW(1) /= 9898 ) then
       WB(1,5) = (PB(10)*BT(2,1)+PB(11)*BT(4,1))*CD14B*F5B
      end if
      WB(2,5) = 0
      F5C = 1.
      WC(1,5) = 0
      if( WW(2) /= 9898 ) then
       WC(2,5) = - ( PC(10)*BT(3,1)+PC(11)*BT(5,1)+PC(21)*BT(7,1) )
     $            *CD14C*F5C
      end if
C       ASYMMETRICAL SEMIANNUAL
      if( WW(2) /= 9898 ) then
       WC(2,6) = -(PC(38)*BT(3,1)+PC(99)*BT(5,1))*CD39C
      end if
C       DIURNAL      
      if( SWM(7) == 0) GOTO 200
      F7B = 1.
      F75B = 1.
      if( WW(1) /= 9898 ) then
       WB(1,7) = (PB(7)*BT(2,2)+PB(8)*BT(4,2)+PB(29)*BT(6,2)
     $         +PB(89)*BT(3,2)
     $  )*SSTL*F7B
     $ +(PB(13)*BT(3,2))
     $    *CD25B*SSTL*F75B*SWC(5)
     $ + (PB(4)*BT(2,2)+PB(5)*BT(4,2)+PB(28)*BT(6,2)
     $         +PB(88)*BT(3,2)
     $  )*CSTL*F7B
     $ +(PB(12)*BT(3,2))
     $      *CD25B*CSTL*F75B*SWC(5)
      end if
      if( WW(2) /= 9898 ) then
       WB(2,7) = -(PB(4)*BP(2,2)+PB(5)*BP(4,2)+PB(28)*BP(6,2)
     $         +PB(88)*BP(3,2)
     $  )*SSTL*F7B
     $ -(PB(12)*BP(3,2))
     $    *CD25B*SSTL*F75B*SWC(5)
     $ + (PB(7)*BP(2,2)+PB(8)*BP(4,2)+PB(29)*BP(6,2)
     $         +PB(89)*BP(3,2)
     $  )*CSTL*F7B
     $ +(PB(13)*BP(3,2))
     $    *CD25B*CSTL*F75B*SWC(5)
      end if
      F7C = 1.
      F75C = 1.
      if( WW(1) /= 9898 ) then
       WC(1,7) = -(PC(4)*BP(3,2)+PC(5)*BP(5,2)+PC(28)*BP(7,2)
     $         +PC(88)*BP(2,2)
     $  )*SSTL*F7C
     $ -(PC(12)*BP(2,2))
     $    *CD25B*SSTL
     $   *F75C*SWC(5)
     $ +(PC(7)*BP(3,2)+PC(8)*BP(5,2)+PC(29)*BP(7,2)
     $         +PC(89)*BP(2,2)
     $  )*CSTL*F7C
     $ +(PC(13)*BP(2,2))
     $     *CD25B*CSTL
     $   *F75C*SWC(5)
      end if
      if( WW(2) /= 9898 ) then
       WC(2,7) = -(PC(7)*BT(3,2)+PC(8)*BT(5,2)+PC(29)*BT(7,2)
     $         +PC(89)*BT(2,2)
     $  )*SSTL*F7C
     $ -(PC(13)*BT(2,2))
     $    *CD25B*SSTL
     $   *F75C*SWC(5)
     $ -(PC(4)*BT(3,2)+PC(5)*BT(5,2)+PC(28)*BT(7,2)
     $         +PC(88)*BT(2,2)
     $  )*CSTL*F7C
     $ -(PC(12)*BT(2,2))
     $    *CD25B*CSTL
     $   *F75C*SWC(5)
      end if
  200 CONTINUE
C       SEMIDIURNAL
      if( SWM(8) == 0) GOTO 210
      F8B = 1.
      if( WW(1) /= 9898 ) then
       WB(1,8) = (PB(9)*BT(3,3)+PB(43)*BT(5,3)+PB(35)*BT(7,3)
     $         +PB(98)*BT(4,3)
     $   +(PB(34)*BT(4,3))*CD26B*SWC(5)
     $   +(PB(37)*BT(4,3))*CD19B*SWC(6)
     $  )*S2STL*F8B
     $ +(PB(6)*BT(3,3)+PB(42)*BT(5,3)+PB(33)*BT(7,3)
     $         +PB(96)*BT(4,3)
     $   +(PB(24)*BT(4,3))*CD26B*SWC(5)
     $   +(PB(36)*BT(4,3))*CD19B*SWC(6)
     $  )*C2STL*F8B
      end if
      if( WW(2) /= 9898 ) then
       WB(2,8) = -(PB(6)*BP(3,3)+PB(42)*BP(5,3)+PB(33)*BP(7,3)
     $          +PB(96)*BP(4,3)
     $   +(PB(24)*BP(4,3))*CD26B*SWC(5)
     $   +(PB(36)*BP(4,3))*CD19B*SWC(6)
     $  )*S2STL*F8B
     $   + (PB(9)*BP(3,3)+PB(43)*BP(5,3)+PB(35)*BP(7,3)
     $          +PB(98)*BP(4,3)
     $   +(PB(34)*BP(4,3))*CD26B*SWC(5)
     $   +(PB(37)*BP(4,3))*CD19B*SWC(6)
     $  )*C2STL*F8B
      end if
      F8C = 1.
      if( WW(1) /= 9898 ) then
       WC(1,8) = -(PC(6)*BP(4,3)+PC(42)*BP(6,3)+PC(33)*BP(8,3)
     $          +PC(96)*BP(3,3)
     $   +(PC(24)*BP(3,3))*CD26B*SWC(5)
     $   +(PC(36)*BP(3,3))*CD19B*SWC(6)
     $  )*S2STL*F8C
     $ +(PC(9)*BP(4,3)+PC(43)*BP(6,3)+PC(35)*BP(8,3)
     $          +PC(98)*BP(3,3)
     $   +(PC(34)*BP(3,3))*CD26B*SWC(5)
     $   +(PC(37)*BP(3,3))*CD19B*SWC(6)
     $  )*C2STL*F8C
      end if
      if( WW(2) /= 9898 ) then
       WC(2,8) = -(PC(9)*BT(4,3)+PC(43)*BT(6,3)+PC(35)*BT(8,3)
     $          +PC(98)*BT(3,3)
     $   +(PC(34)*BT(3,3))*CD26B*SWC(5)
     $   +(PC(37)*BT(3,3))*CD19B*SWC(6)
     $  )*S2STL*F8C
     $ - (PC(6)*BT(4,3)+PC(42)*BT(6,3)+PC(33)*BT(8,3)
     $          +PC(96)*BT(3,3)
     $   +(PC(24)*BT(3,3))*CD26B*SWC(5)
     $   +(PC(36)*BT(3,3))*CD19B*SWC(6)
     $  )*C2STL*F8C
      end if
  210 CONTINUE
C        LONGITUDINAL
      if( SWM(10) == 0 .or. SWM(11) == 0) GOTO 230
      if( WW(1) /= 9898 ) then
       WC(1,11) = 
     $ - (PC(65)*BP(2,2)+PC(66)*BP(4,2)+PC(67)*BP(6,2)
     $   +PC(75)*BP(3,2)+PC(76)*BP(5,2)+ PC(77)*BP(7,2)
     $   +(PC(57)*BP(2,2)+PC(59)*BP(4,2)+PC(62)*BP(6,2)
     $    +PC(51)*BP(3,2)+PC(53)*BP(5,2)+PC(55)*BP(7,2))
     $     *CD64C*SWC(3)
     $   +(PC(74)*BP(2,2)+PC(82)*BP(4,2)+PC(85)*BP(6,2)
     $    +PC(68)*BP(3,2)+PC(70)*BP(5,2)+PC(72)*BP(7,2))
     $     *CD87C*SWC(4)
     $  )*SLONG
     $ + (PC(91)*BP(2,2)+PC(92)*BP(4,2)+PC(93)*BP(6,2)
     $   +PC(78)*BP(3,2)+PC(79)*BP(5,2)+PC(80)*BP(7,2)
     $   +(PC(58)*BP(2,2)+PC(61)*BP(4,2)+PC(63)*BP(6,2)
     $    +PC(52)*BP(3,2)+PC(54)*BP(5,2)+PC(56)*BP(7,2))
     $     *CD64C*SWC(3)
     $   +(PC(81)*BP(2,2)+PC(84)*BP(4,2)+PC(86)*BP(6,2)
     $    +PC(69)*BP(3,2)+PC(71)*BP(5,2)+PC(73)*BP(7,2))
     $     *CD87C*SWC(4)
     $  )*CLONG
      end if
      if( WW(2) /= 9898 ) then
       WC(2,11) = 
     $ - (PC(91)*BT(2,2)+PC(92)*BT(4,2)+PC(93)*BT(6,2)
     $   +PC(78)*BT(3,2)+PC(79)*BT(5,2)+PC(80)*BT(7,2)
     $   +(PC(58)*BT(2,2)+PC(61)*BT(4,2)+PC(63)*BT(6,2)
     $    +PC(52)*BT(3,2)+PC(54)*BT(5,2)+PC(56)*BT(7,2))
     $     *CD64C*SWC(3)
     $   +(PC(81)*BT(2,2)+PC(84)*BT(4,2)+PC(86)*BT(6,2)
     $    +PC(69)*BT(3,2)+PC(71)*BT(5,2)+PC(73)*BT(7,2))
     $     *CD87C*SWC(4)
     $  )*SLONG
     $ - (PC(65)*BT(2,2)+PC(66)*BT(4,2)+PC(67)*BT(6,2)
     $   +PC(75)*BT(3,2)+PC(76)*BT(5,2)+PC(77)*BT(7,2)
     $   +(PC(57)*BT(2,2)+PC(59)*BT(4,2)+PC(62)*BT(6,2)
     $    +PC(51)*BT(3,2)+PC(53)*BT(5,2)+PC(55)*BT(7,2))
     $     *CD64C*SWC(3)
     $   +(PC(74)*BT(2,2)+PC(82)*BT(4,2)+PC(85)*BT(6,2)
     $    +PC(68)*BT(3,2)+PC(70)*BT(5,2)+PC(72)*BT(7,2))
     $     *CD87C*SWC(4)
     $  )*CLONG
      end if
  230 CONTINUE
      WBT(1) = 0
      WBT(2) = 0
      WCT(1) = 0
      WCT(2) = 0
C       SUM WINDS AND CHANGE MERIDIONAL SIGN TO + NORTH
      do 50 K = 1,NSW
        WBT(1) = WBT(1)-ABS(SWM(K))*WB(1,K)
        WCT(1) = WCT(1)-ABS(SWM(K))*WC(1,K)
        WBT(2) = WBT(2)+ABS(SWM(K))*WB(2,K)
        WCT(2) = WCT(2)+ABS(SWM(K))*WC(2,K)
   50 CONTINUE
      if( WW(1) /= 9898) WW(1) = WBT(1)*SWM(24)+WCT(1)*SWM(25)
      if( WW(2) /= 9898) WW(2) = WBT(2)*SWM(24)+WCT(2)*SWM(25)

      end subroutine GLBW5S

!-----------------------------------------------------------------------

      subroutine SETSWITCH( IW )
      
!-----------------------------------------------------------------------
!      Using switches IW given by the driver, this routine defines for i=1,24 :
!      SWM FOR MAIN TERMS ON (1) or OFF (0)
!      SWC FOR CROSS TERMS ON (1) or OFF (0)
!       IW(i)=0 : Main terms & Cross terms OFF
!       IW(i)=1 : Main terms & Cross terms ON
!       IW(i)=2 : Main terms OFF & Cross terms ON
!       IW(i)=3 : Main terms ON & Cross terms OFF
!           Replaces Hedin's subroutine TSELEC
!-----------------------------------------------------------------------
      use HWM_CSW
      
      implicit none
      SAVE
      
!--------------------------------------------------------------------------
!	... Dummy args
!--------------------------------------------------------------------------
      integer, intent(in) :: IW(25)

!--------------------------------------------------------------------------
!	... Local variables
!--------------------------------------------------------------------------
      integer :: i

      do i  =  1,25
        SWM(i) = REAL( MOD( IW(i),2 ) )
        if( IW(I) == 1  .or. IW(i) == 2 ) then
          SWC(I) = 1.
        else
          SWC(I) = 0.
        end if
      end do

      end subroutine SETSWITCH

!=======================================================================

      subroutine VSPHR1(C,S,L,M,BT,BP,LMAX)
C      CALCULATE VECTOR SPHERICAL HARMONIC B FIELD THETA AND PHI
C      FUNCTIONS BT,BP THROUGH ORDER L,M FOR COLATITUDE (THETA)
C      WITH COSINE C AND SINE S OF COLATITUDE
C      BT(L+1,M+1) =  [(L-M+1) P(L+1,M) - (L+1) P(L,M) COS(THETA)] /
C                [SQRT(L(L+1)) SIN(THETA)]
C      BP(L+1,M+1) =  M P(L,M) /[SQRT(L(L+1)) SIN(THETA)]
C       RESULT FOR GIVEN L,M SAVED IN BT AND BP AT ONE HIGHER INDEX NUM
      DIMENSION BT(LMAX,1),BP(LMAX,1),PLG(20,20)
      SAVE
      DATA DGTR/1.74533E-2/
      if( M > L .or. L > LMAX-1 ) then
        WRITE(6,100) L,M,LMAX
  100   FORMAT('ILLEGAL INDICIES TO VSPHER',3I6)
        RETURN
      end if
      BT(1,1) = 0
      BP(1,1) = 0
      if( L == 0 .and. M == 0) RETURN
      call LEGPL1(C,S,L+1,M,PLG,20)
      if( ABS(S) < 1.E-5 ) then
        IC = SIGN(1.,S)
        S = 0
      end if
      do LL = 1,L
        SQT = SQRT(FLOAT(LL)*(FLOAT(LL)+1))
        LMX = MIN(LL,M)
        do MM = 0,LMX
          if( S == 0 ) then
            if( MM /= 1 ) then
              BT(LL+1,MM+1) = 0
              BP(LL+1,MM+1) = 0
            else
              BT(LL+1,MM+1) = (LL*(LL+1)*(LL+2)*.5*(IC)**(LL+2)
     $           -(LL+1)*C*LL*(LL+1)*.5*(IC)**(LL+1))/SQT
              BP(LL+1,MM+1) = MM*LL*(LL+1)*.5*(IC)**(LL+1)/SQT
            end if
          else
            BT(LL+1,MM+1) = ((LL-MM+1)*PLG(LL+2,MM+1)
     $      -(LL+1)*C*PLG(LL+1,MM+1))/(S*SQT)
            BP(LL+1,MM+1) = MM*PLG(LL+1,MM+1)/(S*SQT)
          end if
        end do
      end do
      
      end subroutine VSPHR1

!-----------------------------------------------------------------------

      subroutine LEGPL1(C,S,L,M,PLG,LMAX)
!-----------------------------------------------------------------------
!      CALCULATE LEGENDRE POLYNOMIALS PLG(L+1,M+1) THROUGH ORDER L,M 
!      FOR COSINE C AND SINE S OF COLATITUDE
!-----------------------------------------------------------------------

!--------------------------------------------------------------------------
!	... Dummy args
!--------------------------------------------------------------------------
      integer, intent(in) :: L, M, LMAX
      real, intent(in) :: C, S
      real, intent(out), dimension(LMAX,1) :: PLG
      SAVE
      real :: DGTR = 1.74533E-2

      if( M > L .or. L > LMAX-1 ) then
        write(*,'(a,3i5)') 'HWM_CODE: illegal indicies to LEGPL1: ',
     $                                            L, M, LMAX
        stop 'HWM_CODE: illegal indicies to LEGPL1'
      end if
      
      PLG(1,1) = 1.
      if( L == 0 .and. M == 0) RETURN
C      CALCULATE L = M CASE AND L = M+1
      do 10 MM = 0,M
        if( MM > 0) PLG(MM+1,MM+1) = PLG(MM,MM)*(2.*MM-1.)*S
        if( L > MM) PLG(MM+2,MM+1) = PLG(MM+1,MM+1)*(2.*MM+1)*C
   10 CONTINUE
      if( L == 1) RETURN
      MMX = MIN(M,L-2)
      do 30 MM = 0,MMX
        do 20 LL = MM+2,L
          PLG(LL+1,MM+1) = ((2.*LL-1.)*C*PLG(LL,MM+1)-
     $     (LL+MM-1.)*PLG(LL-1,MM+1))/(LL-MM)
   20   CONTINUE
   30 CONTINUE

      end subroutine LEGPL1

!-----------------------------------------------------------------------

      subroutine SPLINE(X,Y,N,YP1,YPN,Y2)
C        CALCULATE 2ND DERIVATIVES OF CUBIC SPLINE INTERP FUNCTION
C        X,Y: ARRAYS OF TABULATED FUNCTION IN ASCENDING ORDER BY X
C        N: SIZE OF ARRAYS X,Y
C        YP1,YPN: SPECIFIED DERIVATIVES AT X(1) AND X(N); VALUES
C                 > =  1E30 SIGNAL SIGNAL SECOND DERIVATIVE ZERO
C        Y2: OUTPUT ARRAY OF SECOND DERIVATIVES
      PARAMETER (NMAX = 100)
      DIMENSION X(N),Y(N),Y2(N),U(NMAX)
      SAVE
      if( YP1 > .99E30 ) then
        Y2(1) = 0
        U(1) = 0
      else
        Y2(1) = -.5
        U(1) = (3./(X(2)-X(1)))*((Y(2)-Y(1))/(X(2)-X(1))-YP1)
      end if
      do 11 I = 2,N-1
        SIG = (X(I)-X(I-1))/(X(I+1)-X(I-1))
        P = SIG*Y2(I-1)+2.
        Y2(I) = (SIG-1.)/P
        U(I) = (6.*((Y(I+1)-Y(I))/(X(I+1)-X(I))-(Y(I)-Y(I-1))
     $    /(X(I)-X(I-1)))/(X(I+1)-X(I-1))-SIG*U(I-1))/P
   11 CONTINUE
      if( YPN > .99E30 ) then
        QN = 0
        UN = 0
      else
        QN = .5
        UN = (3./(X(N)-X(N-1)))*(YPN-(Y(N)-Y(N-1))/(X(N)-X(N-1)))
      end if
      Y2(N) = (UN-QN*U(N-1))/(QN*Y2(N-1)+1.)
      do 12 K = N-1,1,-1
        Y2(K) = Y2(K)*Y2(K+1)+U(K)
   12 CONTINUE

      end subroutine SPLINE
      
!-----------------------------------------------------------------------

      subroutine SPLINT(XA,YA,Y2A,N,X,Y)
!-----------------------------------------------------------------------
C        CALCULATE CUBIC SPLINE INTERP VALUE
C        XA,YA: ARRAYS OF TABULATED FUNCTION IN ASCENDING ORDER BY X
C        Y2A: ARRAY OF SECOND DERIVATIVES
C        N: SIZE OF ARRAYS XA,YA,Y2A
C        X: ABSCISSA FOR INTERPOLATION
C        Y: OUTPUT VALUE
!-----------------------------------------------------------------------
      DIMENSION XA(N),YA(N),Y2A(N)
      SAVE
      KLO = 1
      KHI = N
    1 CONTINUE
      if( KHI-KLO > 1 ) then
        K = (KHI+KLO)/2
        if( XA(K) > X ) then
          KHI = K
        else
          KLO = K
        end if
        GOTO 1
      end if
      H = XA(KHI)-XA(KLO)
      if( H == 0) WRITE(6,*) 'BAD XA INPUT TO SPLINT'
      A = (XA(KHI)-X)/H
      B = (X-XA(KLO))/H
      Y = A*YA(KLO)+B*YA(KHI)+
     $  ((A*A*A-A)*Y2A(KLO)+(B*B*B-B)*Y2A(KHI))*H*H/6.

      end subroutine SPLINT

!-----------------------------------------------------------------------

      end module HWM_CODE
